{"format":0,"accessors":{"JS Hero Renderer Resources|CachedColor":{"methods":[{"params":[{"type":"int","name":"hex","desc":"Hex color code"}],"name":"set","returns":"CachedColor","desc":"Sets this color to the color represented by the specified hexadecimal value."},{"name":"isNull","returns":"boolean","desc":"Checks if this color has been set, or if a \"default\" one should be used instead."},{"params":[{"type":"float","name":"red","desc":"The \u0027red\u0027 color component"},{"type":"float","name":"green","desc":"The \u0027green\u0027 color component"},{"type":"float","name":"blue","desc":"The \u0027blue\u0027 color component"}],"name":"setRGB","returns":"CachedColor","desc":"Sets this color to the color represented by the specified red, green, and blue values. These values may range from 0.0 to 1.0 to represent - as fractions - 0 to 255 in regular color space."},{"params":[{"type":"float","name":"hue","desc":"The hue color component"},{"type":"float","name":"saturation","desc":"The saturation color component"},{"type":"float","name":"brightness","desc":"The brightness color component"}],"name":"setHSB","returns":"CachedColor","desc":"Sets this color to the color represented by the specified hue, saturation, and brightness values. These values may range from 0.0 to 1.0."}],"fields":[]},"JS Hero Renderer Resources|Line":{"methods":[],"fields":[{"name":"start","type":"Point3f","desc":"Offset of this line\u0027s start position in pixels, relative to its anchor point.","assignable":false},{"name":"end","type":"Point3f","desc":"Offset of this line\u0027s end position in pixels, relative to its anchor point.","assignable":false},{"name":"size","type":"Point2f","desc":"Width and height of this line in pixels.","assignable":false},{"name":"seed","type":"Long","desc":"The seed used to generate \"random\" beam renderer aspects, like lightning. Set to a random value if left blank.","assignable":true}]},"JS Accessors|JSOwnable":{"methods":[{"name":"getOwner","returns":"JSEntity"}],"fields":[],"parent":"JSEntity"},"JS Accessors|JSSheep":{"methods":[{"name":"isSheared","returns":"boolean","desc":"Checks if this sheep has been sheared."},{"name":"getWoolColor","returns":"int","desc":"Gets the wool color of this sheep as an integer metadata value. Consistent with the metadatas of dyes, wool blocks, stained glass/clay, and other dyed items."}],"fields":[],"parent":"JSAnimal"},"JS Accessors|JSWorld":{"methods":[{"name":"name","returns":"String","desc":"Gets the name of this world."},{"params":[{"type":"int","name":"x","desc":"X-coordinate"},{"type":"int","name":"y","desc":"Y-coordinate"},{"type":"int","name":"z","desc":"Z-coordinate"}],"name":"getLocation","returns":"JSLocation","desc":"Gets an object representing the location data at the specified coordinates."},{"params":[{"type":"JSVector3","name":"vector","desc":"Block coordinates"}],"name":"getLocation","returns":"JSLocation","desc":"Gets an object representing the location data at the specified coordinates."},{"params":[{"type":"int","name":"x","desc":"X-coordinate"},{"type":"int","name":"y","desc":"Y-coordinate"},{"type":"int","name":"z","desc":"Z-coordinate"}],"name":"getBlockMetadata","returns":"int","desc":"Gets the metadata of the block at the specified x-, y-, and z-coordinates."},{"params":[{"type":"JSVector3","name":"vector","desc":"Block coordinates"}],"name":"getBlockMetadata","returns":"int","desc":"Gets the metadata of the block at the x-, y-, and z-coordinates represented by the specified vector."},{"params":[{"type":"int","name":"x","desc":"X-coordinate"},{"type":"int","name":"y","desc":"Y-coordinate"},{"type":"int","name":"z","desc":"Z-coordinate"}],"name":"getBlock","returns":"String","desc":"Gets the registry name of the block at the specified x-, y-, and z-coordinates."},{"params":[{"type":"JSVector3","name":"vector","desc":"Block coordinates"}],"name":"getBlock","returns":"String","desc":"Gets the registry name of the block at the x-, y-, and z-coordinates represented by the specified vector."},{"name":"getDimension","returns":"int","desc":"Gets the dimension id of this world."},{"params":[{"type":"int","name":"id","desc":"The temporary id of the entity"}],"name":"getEntityById","returns":"JSEntity","desc":"Gets the entity with the specified id, if it exists."},{"params":[{"type":"int","name":"x","desc":"X-coordinate"},{"type":"int","name":"y","desc":"Y-coordinate"},{"type":"int","name":"z","desc":"Z-coordinate"}],"name":"blockAt","returns":"JSBlock","desc":"Gets the block at the specified x-, y-, and z-coordinates."},{"params":[{"type":"JSVector3","name":"vector","desc":"Block coordinates"}],"name":"blockAt","returns":"JSBlock","desc":"Gets the block at the x-, y-, and z-coordinates represented by the specified vector."},{"name":"isDaytime","returns":"boolean","desc":"Checks if it is currently daytime in this world."},{"name":"isThundering","returns":"boolean","desc":"Checks if it is currently thundering in this world."},{"name":"isRaining","returns":"boolean","desc":"Checks if it is currently raining in this world."}],"fields":[]},"JS Hero Renderer Properties|fiskheroes:heat_vision":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroRenderProp","desc":"Sets this beam to be anchored to the given body part."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroRenderProp","desc":"Sets the beam renderer to use when rendering this beam."},{"params":[{"type":"BeamConstlnHolder","name":"constln","desc":"The beam constellation resource object"}],"name":"setConstellation","returns":"HeroRenderProp","desc":"Sets the beam constellation to use when rendering this beam."},{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use upon impact of this beam."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropBeam"},"JS Hero Renderer Effects|fiskheroes:model":{"methods":[{"params":[{"type":"ModelHolder","name":"model","desc":"The model resource object"}],"name":"setModel","returns":"HeroEffectJS","desc":"Sets the model to render."},{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this effect by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this effect by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this effect by"}],"name":"setOffset","returns":"HeroEffectJS","desc":"Sets the offset of this effect relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"float","name":"x","desc":"The angle by which to rotate this effect around the X-axis"},{"type":"float","name":"y","desc":"The angle by which to rotate this effect around the Y-axis"},{"type":"float","name":"z","desc":"The angle by which to rotate this effect around the Z-axis"}],"name":"setRotation","returns":"HeroEffectJS","desc":"Sets the rotation of this effect relative to its anchor point to the specified amount in degrees."},{"params":[{"type":"float","name":"x","desc":"The X-factor to scale this effect by"},{"type":"float","name":"y","desc":"The Y-factor to scale this effect by"},{"type":"float","name":"z","desc":"The Z-factor to scale this effect by"}],"name":"setScale","returns":"HeroEffectJS","desc":"Sets the scale of this effect to the specified factor."},{"params":[{"type":"float","name":"scale","desc":"The factor to scale this effect by"}],"name":"setScale","returns":"HeroEffectJS","desc":"Sets the scale of this effect to the specified factor."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"},{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[BODY]"},{"name":"mirror","type":"boolean","desc":"Whether or not this effect should render a second mirrored version of itself on the opposite side / anchor body part.","assignable":true,"defVal":"false"}],"parent":"AbstractHeroEffectPositioned"},"JS Hero Renderer Effects|fiskheroes:glowerlay":{"methods":[{"params":[{"type":"Array (HeroEffectJS)","name":"effects","desc":"The effect(s) to be included"}],"name":"includeEffects","returns":"void","desc":"Marks the specified effect(s) to be included in this effect\u0027s rendering, allowing it to apply on top of them.\n\nCan only be invoked during the init() phase."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"AbstractHeroEffectOverlay"},"JS Hero Renderer Properties|fiskheroes:opacity":{"methods":[{"params":[{"type":"function(JSEntity, String): returns Double","name":"func"}],"name":"setOpacity","returns":"HeroRenderProp"},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[],"parent":"HeroRenderProp"},"JS Hero Renderer Resources|ParticleHolder":{"methods":[],"fields":[{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Hero Renderer Effects|fiskheroes:metal_heat":{"methods":[{"params":[{"type":"Array (HeroEffectJS)","name":"effects","desc":"The effect(s) to be included"}],"name":"includeEffects","returns":"void","desc":"Marks the specified effect(s) to be included in this effect\u0027s rendering, allowing it to apply on top of them.\n\nCan only be invoked during the init() phase."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":false,"defVal":"0xFFBF7F"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"AbstractHeroEffectOverlay"},"JS Accessors|JSVector3":{"methods":[{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"},{"type":"double","name":"z","desc":"Z-component"}],"name":"add","returns":"JSVector3","desc":"Creates a new vector equal to this one plus the specified x-, y-, and z- components."},{"params":[{"type":"JSVector3","name":"vector","desc":"Component vector"}],"name":"add","returns":"JSVector3","desc":"Creates a new vector equal to this one plus the x-, y-, and z- components of the specified vector."},{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"},{"type":"double","name":"z","desc":"Z-component"}],"name":"equals","returns":"boolean","desc":"Checks if this vector is equal to the specified x-, y-, and z- components."},{"params":[{"type":"JSVector3","name":"vector","desc":"Component vector"}],"name":"equals","returns":"boolean","desc":"Checks if this vector is equal to the x-, y-, and z- components of the specified vector."},{"name":"length","returns":"double","desc":"Gets the length of the vector, i.e. the Euclidean distance between this vector and (0,0,0) in a coordinate system."},{"name":"x","returns":"double"},{"params":[{"type":"JSVector3","name":"vector","desc":"Component vector"}],"name":"multiply","returns":"JSVector3","desc":"Creates a new vector equal to this one multiplied by the x-, y-, and z- components of the specified vector."},{"params":[{"type":"double","name":"factor"}],"name":"multiply","returns":"JSVector3","desc":"Creates a new vector equal to this one multiplied by the specified factor."},{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"},{"type":"double","name":"z","desc":"Z-component"}],"name":"multiply","returns":"JSVector3","desc":"Creates a new vector equal to this one multiplied by the specified x-, y-, and z- factors."},{"name":"y","returns":"double"},{"name":"z","returns":"double"},{"name":"yx","returns":"JSVector2","desc":"Gets a new 2D vector representing the y- and x-components of this vector."},{"name":"yz","returns":"JSVector2","desc":"Gets a new 2D vector representing the y- and z-components of this vector."},{"params":[{"type":"JSVector3","name":"vector","desc":"Specified vector"}],"name":"distanceTo","returns":"double","desc":"Gets the Euclidean distance between this and the specified vector."},{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"},{"type":"double","name":"z","desc":"Z-component"}],"name":"distanceTo","returns":"double","desc":"Gets the Euclidean distance between this and the vector of x,y,z components passed in."},{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"},{"type":"double","name":"z","desc":"Z-component"}],"name":"squareDistanceTo","returns":"double","desc":"Gets the square of the Euclidean distance between this and the vector of x,y,z components passed in."},{"params":[{"type":"JSVector3","name":"vector","desc":"Specified vector"}],"name":"squareDistanceTo","returns":"double","desc":"Gets the square of the Euclidean distance between this and the specified vector."},{"name":"zy","returns":"JSVector2","desc":"Gets a new 2D vector representing the z- and y-components of this vector."},{"name":"zx","returns":"JSVector2","desc":"Gets a new 2D vector representing the z- and x-components of this vector."},{"name":"xz","returns":"JSVector2","desc":"Gets a new 2D vector representing the x- and z-components of this vector."},{"name":"xy","returns":"JSVector2","desc":"Gets a new 2D vector representing the x- and y-components of this vector."}],"fields":[]},"JS Hero Renderer Properties|fiskheroes:spellcasting":{"methods":[{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"colorGeneric","type":"CachedColor","desc":"The generic spell color for this suit, used for things like UI elements.","assignable":true,"defVal":"null"},{"name":"colorEarthCrack","type":"CachedColor","desc":"The color to use for the earth crack spell when wearing this suit.","assignable":true,"defVal":"null"},{"name":"colorAtmosphere","type":"CachedColor","desc":"The color to use for the atmospheric spell when wearing this suit.","assignable":true,"defVal":"null"},{"name":"colorWhip","type":"CachedColor","desc":"The color to use for the whip spell when wearing this suit.","assignable":true,"defVal":"null"}],"parent":"HeroRenderProp"},"JS Hero Renderer Properties|fiskheroes:particle_cloud":{"methods":[{"params":[{"type":"CloudHolder","name":"cloud","desc":"The particle cloud resource object"}],"name":"setCloud","returns":"HeroRenderProp","desc":"Sets the particle cloud to emit when moving."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[],"parent":"AbstractRenderPropCloud"},"JS Hero Renderer Properties|fiskheroes:forcefield":{"methods":[{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this property by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this property by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this property by"}],"name":"setOffset","returns":"HeroRenderProp","desc":"Sets the offset of this property relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"float","name":"x","desc":"The angle by which to rotate this property around the X-axis"},{"type":"float","name":"y","desc":"The angle by which to rotate this property around the Y-axis"},{"type":"float","name":"z","desc":"The angle by which to rotate this property around the Z-axis"}],"name":"setRotation","returns":"HeroRenderProp","desc":"Sets the rotation of this property relative to its anchor point to the specified amount in degrees."},{"params":[{"type":"float","name":"scale","desc":"The factor to scale this property by"}],"name":"setScale","returns":"HeroRenderProp","desc":"Sets the scale of this property to the specified factor."},{"params":[{"type":"float","name":"x","desc":"The X-factor to scale this property by"},{"type":"float","name":"y","desc":"The Y-factor to scale this property by"},{"type":"float","name":"z","desc":"The Z-factor to scale this property by"}],"name":"setScale","returns":"HeroRenderProp","desc":"Sets the scale of this property to the specified factor."},{"params":[{"type":"int","name":"x","desc":"The amount of polygon faces going around the horizontal axis"},{"type":"int","name":"y","desc":"The amount of polygon faces going around the vertical axis"}],"name":"setShape","returns":"HeroRenderProp","desc":"Sets the shape of the forcefield to be rendered."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"},{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropColor"},"JS Accessors|JSBlock":{"methods":[{"name":"name","returns":"String","desc":"Gets the registry name of this block."},{"name":"isEmpty","returns":"boolean","desc":"Checks if this block doesn\u0027t exist or is an air block."},{"params":[{"type":"JSBlock","name":"block"}],"name":"matches","returns":"boolean","desc":"Checks if this block is the same type and metadata as the specified block."},{"name":"item","returns":"JSItem","desc":"Gets this block in item form, as it would appear in an inventory."},{"name":"metadata","returns":"int","desc":"Gets the metadata of this block."},{"name":"isSolid","returns":"boolean","desc":"Checks if this block is solid, i.e. it can be collided with."},{"name":"hardness","returns":"float","desc":"Gets the hardness of this block, i.e. a value representing how long it takes to be mined."},{"name":"itemDropped","returns":"JSItem","desc":"Gets the item that this block will drop when mined."}],"fields":[]},"JS Hero Renderer Resources|AnimationEventHolder":{"methods":[{"params":[{"type":"AnimationHolder","name":"animation","desc":"The animation to bind"},{"type":"float","name":"weight","desc":"The relative weight with which it will be selected from the pool"}],"name":"bindAnimation","returns":"AnimationHolder","desc":"Binds the specified animation to this event with the specified relative weight. When this animation event is executed, one of these animations will be randomly selected to play, based on their relative weights.\n\nCan only be invoked during the init() phase."}],"fields":[{"name":"priority","type":"float","desc":"Controls the order in which this animation plays in relation to others. Lower priority animations are applied first, while higher priorities apply last.","assignable":true}],"parent":"InitializableResource"},"JS Accessors|JSCoords":{"methods":[{"name":"xCoord","returns":"int","desc":"Gets the x-component of these coordinates."},{"name":"zCoord","returns":"int","desc":"Gets the z-component of these coordinates."},{"name":"yCoord","returns":"int","desc":"Gets the y-component of these coordinates."},{"name":"dimension","returns":"int","desc":"Gets the dimension id of these coordinates."},{"name":"isZero","returns":"boolean","desc":"Checks if these coordinates represent (0,0,0) in the Overworld dimension."}],"fields":[]},"JS Accessors|PackLoader":{"methods":[{"params":[{"type":"String","name":"domain","desc":"Domain of the HeroPack to check for"}],"name":"isPackLoaded","returns":"boolean","desc":"Checks if a HeroPack using the specified domain is currently loaded."},{"name":"getLoadedPacks","returns":"List","desc":"Gets a list of HeroPack domains currently loaded."}],"fields":[{"name":"globals","type":"Bindings","desc":"Global bindings map which persists beyond heropack reloads. ONLY use this if you know what you are doing!","assignable":false}]},"JS Hero Renderer Properties|fiskheroes:tentacles":{"methods":[{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this property by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this property by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this property by"}],"name":"setOffset","returns":"HeroRenderProp","desc":"Sets the offset of this property relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"Object","name":"obj","desc":"Tentacle JSON object"}],"name":"setTentacles","returns":"HeroRenderProp","desc":"Loads and binds the specified JSON representation of a tentacle object.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"ModelHolder","name":"model","desc":"The model resource object"}],"name":"setHeadModel","returns":"HeroRenderProp","desc":"Sets the model resource object to use when rendering the head of these tentacles."},{"params":[{"type":"ModelHolder","name":"model","desc":"The model resource object"}],"name":"setSegmentModel","returns":"HeroRenderProp","desc":"Sets the model resource object to use when rendering the segments of these tentacles."},{"name":"getHead","returns":"ModelHolder","desc":"Gets the model resource object to use for rendering the head of these tentacles."},{"name":"getSegment","returns":"ModelHolder","desc":"Gets the model resource object to use for rendering the segments of these tentacles."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[BODY]"},{"name":"segmentLength","type":"float","desc":"The distance in pixels to put between each segment.","assignable":true,"defVal":"2.0"},{"name":"segments","type":"int","desc":"The amount of of corners or bends to put in each tentacle.","assignable":true,"defVal":"16"}],"parent":"HeroRenderProp"},"JS Hero Renderer Resources|ShapeHolder":{"methods":[{"params":[{"type":"Object","name":"obj","desc":"Line JSON object"}],"name":"bindLine","returns":"Line","desc":"Loads and binds the specified JSON representation of a line object to this shape.\n\nCan only be invoked during the init() phase."}],"fields":[{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Hero Renderer Properties|fiskheroes:telekinesis":{"methods":[{"params":[{"type":"CloudHolder","name":"cloud","desc":"The particle cloud resource object"}],"name":"setCloud","returns":"HeroRenderProp","desc":"Sets the particle cloud to emit when moving."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[],"parent":"AbstractRenderPropCloud"},"JS Accessors|JSItem":{"methods":[{"name":"name","returns":"String","desc":"Gets the registry name of this item."},{"name":"stackSize","returns":"int","desc":"Gets the number of items that are in this stack of items."},{"name":"isEmpty","returns":"boolean","desc":"Checks if this item is an empty slot."},{"params":[{"type":"JSItem","name":"item"}],"name":"matches","returns":"boolean","desc":"Checks if this item is the same type, metadata, and NBT data as the specified item."},{"name":"displayName","returns":"String","desc":"Gets the display name of this item."},{"name":"maxStackSize","returns":"int","desc":"Gets the number of items that can be stacked in a single slot for this item type."},{"name":"nbt","returns":"JSNBT","desc":"Gets the NBT compound tag of this item."},{"name":"isEnchanted","returns":"boolean","desc":"Checks if this item has any enchantments."},{"params":[{"type":"int","name":"id","desc":"The id of the enchantment"}],"name":"getEnchantmentLevel","returns":"int","desc":"Gets the level of the specified enchantment on this item, or 0 if the enchantment is not present."},{"name":"damage","returns":"int","desc":"Gets the damage (durability removed) of this item. Alternatively, its metadata if it has any."},{"name":"maxDamage","returns":"int","desc":"Gets the max durability of this item, i.e. how much damage it can take before breaking."},{"params":[{"type":"int","name":"id","desc":"The id of the enchantment"}],"name":"hasEnchantment","returns":"boolean","desc":"Checks if this item has the specified enchantment."},{"name":"suitType","returns":"String","desc":"Gets the suit type of this item, if it is a piece of superhero armor."},{"name":"isRenamed","returns":"boolean","desc":"Checks if this item has been renamed in an anvil."},{"name":"isLaserGun","returns":"boolean","desc":"Checks if this item is a laser gun weapon, i.e. one that shoots energy bolts."},{"name":"doesNeedTwoHands","returns":"boolean","desc":"Checks if this item needs two hands to be held, either by dual wielding or by holding it in both hands."},{"name":"isRifle","returns":"boolean","desc":"Checks if this item is a two-handed rifle weapon, like Chronos\u0027 for example."},{"name":"isGun","returns":"boolean","desc":"Checks if this item is a traditional gun weapon, i.e. one that shoots bullets."},{"name":"isWeapon","returns":"boolean","desc":"Checks if this item has an added Attack Damage value greater than 0."}],"fields":[]},"JS Hero Renderer Effects|fiskheroes:wings":{"methods":[{"params":[{"type":"float","name":"yOffset"}],"name":"setYOffset","returns":"HeroEffectJS","desc":"Sets how far down the rotation point of each wing is, in pixels.\n\nCan only be invoked during the init() phase."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[BODY]"},{"name":"unfold","type":"float","desc":"How unfolded these wings are.","assignable":true,"defVal":"1.0"},{"name":"shieldUnfold","type":"float","desc":"How unfolded the right wing is when used as a shield.","assignable":true,"defVal":"0.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Accessors|JSVector2":{"methods":[{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"}],"name":"add","returns":"JSVector2","desc":"Creates a new vector equal to this one plus the specified x- and y-components."},{"params":[{"type":"JSVector2","name":"vector","desc":"Component vector"}],"name":"add","returns":"JSVector2","desc":"Creates a new vector equal to this one plus the x- and y-components of the specified vector."},{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"}],"name":"equals","returns":"boolean","desc":"Checks if this vector is equal to the specified x- and y-components."},{"params":[{"type":"JSVector2","name":"vector","desc":"Component vector"}],"name":"equals","returns":"boolean","desc":"Checks if this vector is equal to the x- and y-components of the specified vector."},{"name":"length","returns":"double","desc":"Gets the length of the vector, i.e. the Euclidean distance between this vector and (0,0) in a coordinate system."},{"name":"x","returns":"double"},{"params":[{"type":"double","name":"factor"}],"name":"multiply","returns":"JSVector2","desc":"Creates a new vector equal to this one multiplied by the specified factor."},{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"}],"name":"multiply","returns":"JSVector2","desc":"Creates a new vector equal to this one multiplied by the specified x- and y-factors."},{"params":[{"type":"JSVector2","name":"vector","desc":"Component vector"}],"name":"multiply","returns":"JSVector2","desc":"Creates a new vector equal to this one multiplied by the x- and y-components of the specified vector."},{"name":"y","returns":"double"},{"params":[{"type":"JSVector2","name":"vector","desc":"Specified vector"}],"name":"distanceTo","returns":"double","desc":"Gets the Euclidean distance between this and the specified vector."},{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"}],"name":"distanceTo","returns":"double","desc":"Gets the Euclidean distance between this and the vector of x,y components passed in."},{"params":[{"type":"double","name":"x","desc":"X-component"},{"type":"double","name":"y","desc":"Y-component"}],"name":"squareDistanceTo","returns":"double","desc":"Gets the square of the Euclidean distance between this and the vector of x,y components passed in."},{"params":[{"type":"JSVector2","name":"vector","desc":"Specified vector"}],"name":"squareDistanceTo","returns":"double","desc":"Gets the square of the Euclidean distance between this and the specified vector."},{"params":[{"type":"double","name":"x","desc":"X-coordinate"},{"type":"double","name":"y","desc":"Y-coordinate"}],"name":"angleTo","returns":"double","desc":"Gets the angle in degrees between this vector and (x,y) in a coordinate system."},{"params":[{"type":"JSVector2","name":"vector","desc":"Specified vector"}],"name":"angleTo","returns":"double","desc":"Gets the angle in degrees between this vector and point formed by the specified vector in a coordinate system."}],"fields":[]},"JS Accessors|JSSlime":{"methods":[{"name":"getSlimeSize","returns":"int","desc":"Gets the size of this slime. 1\u003dsmallest size"}],"fields":[],"parent":"JSEntity"},"JS Accessors|JSNBTList":{"methods":[{"name":"type","returns":"String","desc":"Gets a String representation of the data type of the keys stored within this list, or \"EMPTY\" if it has none."},{"params":[{"type":"int","name":"index","desc":"The index of the list entry to check"}],"name":"getFloat","returns":"float","desc":"Gets the (Float) value of the sub-tag at the specified index, or 0 if no such tag exists at that index. Validates that the tag type of this list is Float."},{"params":[{"type":"int","name":"index","desc":"The index of the list entry to check"}],"name":"getDouble","returns":"double","desc":"Gets the (Double) value of the sub-tag at the specified index, or 0 if no such tag exists at that index. Validates that the tag type of this list is Double."},{"params":[{"type":"int","name":"index","desc":"The index of the list entry to check"}],"name":"getString","returns":"String","desc":"Gets the (String) value of the sub-tag at the specified index, or an empty String if no such tag exists at that index. Validates that the tag type of this list is String."},{"params":[{"type":"int","name":"index","desc":"The index of the list entry to check"}],"name":"getCompoundTag","returns":"JSNBT","desc":"Gets the (JSNBT) value of the sub-tag at the specified index, or a new empty NBT list if no such tag exists at that index. Validates that the tag type of this list is JSNBT."},{"name":"tagCount","returns":"int","desc":"Gets the number of tags contained within this list."},{"params":[{"type":"int","name":"index","desc":"The index of the list entry to check"}],"name":"getIntArray","returns":"int[]","desc":"Gets the (Integer Array) value of the sub-tag at the specified index, or an empty Array if no such tag exists at that index. Validates that the tag type of this list is Array (Integer)."}],"fields":[]},"JS Hero Renderer Resources|ModelHolder":{"methods":[{"params":[{"type":"String","name":"key","desc":"The namespaced path key corresponding to the animation file to be bound"}],"name":"bindAnimation","returns":"ModelAnimationHolder","desc":"Constructs and binds a new model animation to this model.\n\nCan only be invoked during the init() phase."},{"name":"generateMirror","returns":"void","desc":"Sets this model to render a proper mirrored version of itself for the \"mirror\" version of the effect to which it is bound, assuming the effect in question both 1.) has that tag, and 2.) that tag is set to true."},{"params":[{"type":"String","name":"name","desc":"The name of the cube to offset from"},{"type":"String","name":"mirrorName","desc":"The name of the cube to offset from on the mirrored side"}],"name":"getCubeOffset","returns":"CubeOffset","desc":"Stores the offset of the cube in this model corresponding to the given name. The second cube\u0027s offset will be used on the \"mirror\" version of the anchor, if the anchor\u0027s body part has such an equivalent. This is of course predicated on the anchor\u0027s effect\u0027s mirror tag being set to true.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String","name":"name","desc":"The name of the cube to offset from"}],"name":"getCubeOffset","returns":"CubeOffset","desc":"Stores the offset of the cube in this model corresponding to the given name.\n\nCan only be invoked during the init() phase."}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Hero Renderer Effects|fiskheroes:antennae":{"methods":[{"params":[{"type":"int","name":"segments","desc":"The number of segments"}],"name":"setSegments","returns":"HeroEffectJS","desc":"Sets how many segments make up these antennae, i.e. how many \"bends\" they will have.\n\nCan only be invoked during the init() phase."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[HEAD]"},{"name":"angle","type":"float","desc":"The cumulative angle in degrees that the antennae will bend forward by.","assignable":true,"defVal":"0.0"},{"name":"offset","type":"float","desc":"How far back from the base of the forehead that these antennae will render, in pixels.","assignable":true,"defVal":"0.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Hero Renderer Properties|fiskheroes:energy_manipulation":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroRenderProp","desc":"Sets this beam to be anchored to the given body part."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroRenderProp","desc":"Sets the beam renderer to use when rendering this beam."},{"params":[{"type":"BeamConstlnHolder","name":"constln","desc":"The beam constellation resource object"}],"name":"setConstellation","returns":"HeroRenderProp","desc":"Sets the beam constellation to use when rendering this beam."},{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use upon impact of this beam."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropBeam"},"JS Hero Renderer Resources|MeshHolder":{"methods":[{"params":[{"type":"Object"}],"name":"setData","returns":"void"}],"fields":[{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Accessors|JSSkeleton":{"methods":[{"name":"isWitherSkeleton","returns":"boolean","desc":"Checks if this skeleton is a wither skeleton."}],"fields":[],"parent":"JSEntity"},"JS Accessors|JSDataManager":{"methods":[{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"boolean","name":"value"}],"name":"setBoolean","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"Number","name":"value"}],"name":"setByte","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"Number","name":"value"}],"name":"setDouble","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"Number","name":"value"}],"name":"setFloat","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"Number","name":"value"}],"name":"setLong","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"Number","name":"value"}],"name":"setShort","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"String","name":"value"}],"name":"setString","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"Number","name":"value"}],"name":"setInteger","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"}],"name":"removeTag","returns":"void"},{"params":[{"type":"JSNBTList","name":"list"},{"type":"int","name":"index"}],"name":"removeTag","returns":"void"},{"params":[{"type":"JSNBTList","name":"list"},{"type":"JSNBT","name":"value"}],"name":"appendTag","returns":"void"},{"params":[{"type":"JSEntity","name":"entity"},{"type":"String","name":"key"},{"type":"Object","name":"value"}],"name":"setData","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"Object","name":"value"}],"name":"setByteArray","returns":"void"},{"params":[{"type":"JSEntity","name":"entity"},{"type":"String","name":"key"},{"type":"Object","name":"value"}],"name":"setDataWithNotify","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"Object","name":"value"}],"name":"setIntArray","returns":"void"},{"params":[{"type":"String","name":"json"}],"name":"newCompoundTag","returns":"JSNBT"},{"name":"newCompoundTag","returns":"JSNBT"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"JSNBTList","name":"value"}],"name":"setTagList","returns":"void"},{"params":[{"type":"JSNBT","name":"nbt"},{"type":"String","name":"key"},{"type":"JSNBT","name":"value"}],"name":"setCompoundTag","returns":"void"},{"params":[{"type":"JSNBTList","name":"list"},{"type":"Number","name":"value"}],"name":"appendFloat","returns":"void"},{"params":[{"type":"JSNBTList","name":"list"},{"type":"String","name":"value"}],"name":"appendString","returns":"void"},{"params":[{"type":"JSNBTList","name":"list"},{"type":"Object","name":"value"}],"name":"appendIntArray","returns":"void"},{"params":[{"type":"JSNBTList","name":"list"},{"type":"Number","name":"value"}],"name":"appendDouble","returns":"void"},{"params":[{"type":"String","name":"json"}],"name":"newTagList","returns":"JSNBTList"},{"name":"newTagList","returns":"JSNBTList"},{"params":[{"type":"JSEntity","name":"entity"},{"type":"String","name":"key"},{"type":"float","name":"ticksIncr"},{"type":"float","name":"ticksDecr"},{"type":"boolean","name":"incr"},{"type":"boolean","name":"decr"}],"name":"incrementData","returns":"void"},{"params":[{"type":"JSEntity","name":"entity"},{"type":"String","name":"key"},{"type":"float","name":"ticks"},{"type":"boolean","name":"condition"}],"name":"incrementData","returns":"void"},{"params":[{"type":"JSEntity","name":"entity"},{"type":"String","name":"key"},{"type":"float","name":"ticks"},{"type":"boolean","name":"incr"},{"type":"boolean","name":"decr"}],"name":"incrementData","returns":"void"},{"params":[{"type":"JSEntity","name":"entity"},{"type":"String","name":"key"},{"type":"float","name":"ticksIncr"},{"type":"float","name":"ticksDecr"},{"type":"boolean","name":"condition"}],"name":"incrementData","returns":"void"}],"fields":[]},"JS Accessors|JSModifier":{"methods":[{"name":"name","returns":"String","desc":"Gets the registry name of this modifier."},{"params":[{"type":"String","name":"key","desc":"The name of the property"}],"name":"getProperty","returns":"Object","desc":"Gets for this modifier the value associated with the specified modifier property."},{"name":"id","returns":"String","desc":"Gets the associated id assigned to this modifier using bar notation (domain:name|id), or the registry name if it does not have one."},{"name":"power","returns":"JSPower","desc":"Gets the power to which this modifier belongs."}],"fields":[]},"JS Hero Renderer Properties|fiskheroes:teleportation":{"methods":[{"params":[{"type":"CloudHolder","name":"cloud","desc":"The particle cloud resource object"}],"name":"setCloud","returns":"HeroRenderProp","desc":"Sets the particle cloud to emit when moving."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[],"parent":"AbstractRenderPropCloud"},"JS Hero Renderer Resources|AnchorHolder":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"set","returns":"AnchorHolder","desc":"Sets this anchor to the given body part."},{"params":[{"type":"String","name":"bodyPart","desc":"The body part"},{"type":"CubeOffset","name":"offset","desc":"The cube offset(s) to apply on top of the anchor\u0027s body part offset"}],"name":"set","returns":"AnchorHolder","desc":"Sets this anchor to the given body part, with an additional offset from a cube / cube pair."},{"name":"hasMirror","returns":"boolean","desc":"Checks if the body part that this anchor is set to has a symmetrical counterpart. (Such as a left/right)"},{"params":[{"type":"boolean","name":"ignore"}],"name":"ignoreAnchor","returns":"AnchorHolder","desc":"Sets whether or not this anchor should ignore anchoring altogether."}],"fields":[]},"JS Hero Renderer Properties|fiskheroes:trail":{"methods":[{"params":[{"type":"TrailHolder","name":"trail","desc":"The trail resource object"}],"name":"setTrail","returns":"HeroRenderProp","desc":"Sets the trail to render when moving."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[],"parent":"HeroRenderProp"},"JS Hero Renderer Properties|fiskheroes:telekinesis_chain":{"methods":[{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this property by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this property by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this property by"}],"name":"setOffset","returns":"HeroRenderProp","desc":"Sets the offset of this property relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this effect by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this effect by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this effect by"}],"name":"setFirstPerson","returns":"HeroRenderProp","desc":"Sets the first-person offset of this effect relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"CloudHolder","name":"cloud","desc":"The particle cloud resource object"}],"name":"setCloud","returns":"HeroRenderProp","desc":"Sets the particle cloud to emit when moving."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[null]"}],"parent":"AbstractRenderPropCloud"},"JS Accessors|JSEntity":{"methods":[{"name":"type","returns":"String","desc":"Gets the accessor type associated with this entity."},{"name":"getName","returns":"String","desc":"Gets the name of this entity. If this entity is a player, their username will be returned."},{"name":"isAlive","returns":"boolean","desc":"Checks if this entity is currently alive."},{"name":"pos","returns":"JSVector3","desc":"Gets the position of this entity in the world, represented by a vector."},{"name":"exists","returns":"boolean","desc":"Checks if this entity is actually a real entity that exists in the world."},{"params":[{"type":"String","name":"type","desc":"The accessor type to check for"}],"name":"is","returns":"boolean","desc":"Checks if this entity is of the specified type."},{"name":"world","returns":"JSWorld","desc":"Gets the world object containing this entity."},{"params":[{"type":"String","name":"key","desc":"The namespaced id of the data variable for which the value is being retrieved"}],"name":"getData","returns":"Object","desc":"Retrieves for this entity the current value associated with the specified data variable."},{"params":[{"type":"String","name":"sound","desc":"The namespaced sound id of the sound effect to be played"},{"type":"double","name":"volume","desc":"The volume at which the sound should be played"},{"type":"double","name":"pitch","desc":"The pitch at which the sound should be played"}],"name":"playSound","returns":"void"},{"name":"posX","returns":"double","desc":"Gets the x-coordinate of where this entity is in the world."},{"name":"isSneaking","returns":"boolean","desc":"Checks if this entity is currently crouching."},{"name":"posY","returns":"double","desc":"Gets the y-coordinate of where this entity is in the world."},{"name":"motionZ","returns":"double","desc":"Gets the x-component of this entity\u0027s current velocity in the world."},{"name":"posZ","returns":"double","desc":"Gets the z-coordinate of where this entity is in the world."},{"name":"motionX","returns":"double","desc":"Gets the x-component of this entity\u0027s current velocity in the world."},{"name":"motionY","returns":"double","desc":"Gets the y-component of this entity\u0027s current velocity in the world."},{"name":"ticksExisted","returns":"int","desc":"Gets the amount of ticks (i.e. 1/20ths of a second) that this entity has existed in its current world. Note that this is NOT equivalent to the total world playtime for a player."},{"name":"isSprinting","returns":"boolean","desc":"Checks if this entity is currently sprinting."},{"name":"motion","returns":"JSVector3","desc":"Gets this entity\u0027s current velocity in the world, represented by a vector."},{"name":"getHeldItem","returns":"JSItem","desc":"Gets the item currently held in this entity\u0027s hand."},{"name":"isBurning","returns":"boolean","desc":"Checks if this entity is currently on fire."},{"name":"isChild","returns":"boolean","desc":"Checks if this entity is a child."},{"params":[{"type":"int","name":"slot","desc":"The slot to check. 0\u003dheld item, 1-4\u003darmor"}],"name":"getEquipmentInSlot","returns":"JSItem","desc":"Gets the item currently equipped in the given slot."},{"name":"isWet","returns":"boolean","desc":"Checks if this entity is either currently standing in a block of water, or is exposed to rain."},{"name":"isInWater","returns":"boolean","desc":"Checks if this entity is currently standing in a block of water."},{"params":[{"type":"String","name":"type","desc":"The accessor type to cast to"}],"name":"as","returns":"JSEntity","desc":"Gets this entity as an object of the specified type."},{"name":"rotation","returns":"JSVector2","desc":"Gets this entity\u0027s current rotation in degrees, represented by a vector where x\u003dpitch and y\u003dyaw."},{"params":[{"type":"double","name":"ticks","desc":"The amount of ticks that each cycle of the loop will last for"}],"name":"loop","returns":"double","desc":"Gets a number which cycles between 0-1 over time. Use only for rendering."},{"name":"getAir","returns":"int","desc":"Gets the remaining air supply of this entity before drowning, in ticks."},{"name":"rotPitch","returns":"double","desc":"Gets the pitch rotation of this entity in degrees."},{"name":"rotYaw","returns":"double","desc":"Gets the yaw rotation of this entity in degrees."},{"name":"getHealth","returns":"double","desc":"Gets the current health of this entity, in half-hearts."},{"name":"getAbsorptionAmount","returns":"double","desc":"Gets the current amount of absorption on this entity, in half-hearts."},{"name":"motionInterpolated","returns":"JSVector3","desc":"Gets this entity\u0027s current velocity in the world, represented by a vector, using interpolation to smooth out decimal values. Use only for rendering."},{"params":[{"type":"String","name":"key","desc":"The namespaced id of the data variable for which the value is being retrieved"}],"name":"getInterpolatedData","returns":"Object","desc":"Retrieves for this entity the current value associated with the specified data variable, using interpolation to smooth out decimal values. Use only for rendering."},{"name":"isWearingFullSuit","returns":"boolean","desc":"Checks if this entity is currently wearing a full set of some superhero suit."},{"name":"getWornChestplate","returns":"JSItem","desc":"Equivalent to getEquipmentInSlot(3)"},{"params":[{"type":"String","name":"key","desc":"The namespaced id of the data variable for which the value is being retrieved"},{"type":"Object","name":"default","desc":"The default value to be returned if the specified data variable does not exist"}],"name":"getInterpolatedDataOrDefault","returns":"Object","desc":"Retrieves for this entity the current value associated with the specified data variable, or the specified default value if the data variable doesn\u0027t exist, using interpolation to smooth out decimal values. Use only for rendering."},{"name":"getMaxHealth","returns":"double","desc":"Gets the current maximum health of this entity, in half-hearts."},{"name":"isPlayer","returns":"boolean","desc":"Checks if this entity is a player. Equivalent to is(\"PLAYER\")","deprecated":true},{"name":"isInvulnerable","returns":"boolean","desc":"Checks if this entity is invulnerable, i.e. they can\u0027t take any damage."},{"name":"getUUID","returns":"String","desc":"Gets the UUID of this entity."},{"name":"getEntityName","returns":"String","desc":"Gets the registered name associated with this entity type."},{"name":"isOnGround","returns":"boolean","desc":"Checks if this entity is currently standing on solid ground."},{"name":"isUndead","returns":"boolean","desc":"Checks if this entity is classified as an undead, i.e. a skeleton, zombie, pigman, etc."},{"name":"isDisplayStand","returns":"boolean","desc":"Checks if this entity is a display stand or suit preview in the Suit Database."},{"name":"isBookPlayer","returns":"boolean","desc":"Checks if this entity is a suit preview in the Metahuman Log."},{"name":"getWornBoots","returns":"JSItem","desc":"Equivalent to getEquipmentInSlot(1)"},{"params":[{"type":"int","name":"id","desc":"The numerical potion id of the effect that is being checked for"}],"name":"hasPotionEffect","returns":"boolean","desc":"Checks if this entity currently has the specified potion effect applied on them."},{"name":"isLivingEntity","returns":"boolean","desc":"Checks if this entity is a living entity, i.e. a mob or a player."},{"params":[{"type":"String","name":"key","desc":"The namespaced id of the data variable for which the value is being retrieved"},{"type":"Object","name":"default","desc":"The default value to be returned if the specified data variable does not exist"}],"name":"getDataOrDefault","returns":"Object","desc":"Retrieves for this entity the current value associated with the specified data variable, or the specified default value if the data variable doesn\u0027t exist."},{"name":"isPunching","returns":"boolean","desc":"Checks if this entity\u0027s arm swing animation is currently in progress."},{"params":[{"type":"String","name":"key","desc":"The namespaced id of the effect that is being checked for (e.g., \"fiskheroes:velocity_nine\")"}],"name":"hasStatusEffect","returns":"boolean","desc":"Checks if this entity currently has the specified FiskHeroes status effect applied on them."},{"name":"getWornHelmet","returns":"JSItem","desc":"Equivalent to getEquipmentInSlot(4)"},{"name":"isArthropod","returns":"boolean","desc":"Checks if this entity is classified as an arthropod, i.e. a spider, silverfish, creetle, etc."},{"name":"getWornLeggings","returns":"JSItem","desc":"Equivalent to getEquipmentInSlot(2)"},{"name":"asPlayer","returns":"JSPlayer","desc":"Gets this entity as a player object. Equivalent to as(\"PLAYER\")","deprecated":true}],"fields":[]},"JS Hero Renderer Resources|TrailHolder":{"methods":[],"fields":[{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Accessors|JSTameable":{"methods":[{"name":"isSitting","returns":"boolean"},{"name":"isTamed","returns":"boolean"}],"fields":[],"parent":"JSOwnable"},"JS Hero Renderer Resources|Beam":{"methods":[],"fields":[{"name":"offset","type":"Point3f","desc":"Offset of this beam in pixels, relative to its anchor point.","assignable":false},{"name":"firstPerson","type":"Point3f","desc":"First-person offset of this beam in pixels, relative to its anchor point.","assignable":true},{"name":"size","type":"Point2f","desc":"Width and height of this beam in pixels.","assignable":false},{"name":"seed","type":"Long","desc":"The seed used to generate \"random\" beam renderer aspects, like lightning. Set to a random value if left blank.","assignable":true}]},"JS Hero Renderer Effects|fiskheroes:cape":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroEffectJS","desc":"Sets this effect to be anchored to the given body part."},{"params":[{"type":"MeshHolder","name":"mesh","desc":"The mesh resource object"}],"name":"setMesh","returns":"HeroEffectJS","desc":"Sets the mesh to render."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"rigid","type":"float","desc":"Used for \"freezing\" the cape in a rigid, non-moving state. 1.0 \u003d fully rigid.","assignable":true,"defVal":"0.0"},{"name":"length","type":"float","desc":"How long this cape should be, in pixels.","assignable":true,"defVal":"24.0"},{"name":"width","type":"float","desc":"How wide this cape should be, in pixels.","assignable":true,"defVal":"14.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Hero Renderer Properties|fiskheroes:shadowdome":{"methods":[{"params":[{"type":"int","name":"x","desc":"The amount of polygon faces going around the horizontal axis"},{"type":"int","name":"y","desc":"The amount of polygon faces going around the vertical axis"}],"name":"setShape","returns":"HeroRenderProp","desc":"Sets the shape of the dome to be rendered."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false}],"parent":"HeroRenderProp"},"JS Hero Renderer Effects|fiskheroes:vibration":{"methods":[{"params":[{"type":"Array (HeroEffectJS)","name":"effects","desc":"The effect(s) to be included"}],"name":"includeEffects","returns":"void","desc":"Marks the specified effect(s) to be included in this effect\u0027s rendering, allowing it to apply on top of them.\n\nCan only be invoked during the init() phase."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[],"parent":"AbstractHeroEffectOverlay"},"JS Hero Renderer Resources|BeamConstlnHolder":{"methods":[{"params":[{"type":"Object","name":"obj","desc":"Beam JSON object"}],"name":"bindBeam","returns":"Beam","desc":"Loads and binds the specified JSON representation of a beam object to this constellation.\n\nCan only be invoked during the init() phase."}],"fields":[],"parent":"InitializableResource"},"JS Accessors|JSRule":{"methods":[{"name":"name","returns":"String","desc":"Gets the registry name of this rule."},{"name":"value","returns":"Object","desc":"Gets the current value associated with this rule."},{"name":"defaultValue","returns":"Object","desc":"Gets the default value of this rule."},{"name":"isInteger","returns":"boolean","desc":"Checks if the data type of this rule is an Integer."},{"name":"isBoolean","returns":"boolean","desc":"Checks if the data type of this rule is a Boolean."},{"name":"isFloat","returns":"boolean","desc":"Checks if the data type of this rule is a Float."},{"name":"isDouble","returns":"boolean","desc":"Checks if the data type of this rule is a Double."}],"fields":[]},"JS Hero Renderer Properties|fiskheroes:repulsor_blast":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroRenderProp","desc":"Sets this beam to be anchored to the given body part."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroRenderProp","desc":"Sets the beam renderer to use when rendering this beam."},{"params":[{"type":"BeamConstlnHolder","name":"constln","desc":"The beam constellation resource object"}],"name":"setConstellation","returns":"HeroRenderProp","desc":"Sets the beam constellation to use when rendering this beam."},{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use upon impact of this beam."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropBeam"},"JS Hero Renderer Resources|BeamRendererHolder":{"methods":[],"fields":[{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Hero Renderer Properties|fiskheroes:energy_projection":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroRenderProp","desc":"Sets this beam to be anchored to the given body part."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroRenderProp","desc":"Sets the beam renderer to use when rendering this beam."},{"params":[{"type":"BeamConstlnHolder","name":"constln","desc":"The beam constellation resource object"}],"name":"setConstellation","returns":"HeroRenderProp","desc":"Sets the beam constellation to use when rendering this beam."},{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use upon impact of this beam."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropBeam"},"JS Hero Renderer Properties|fiskheroes:webs":{"methods":[{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"textureSmall","type":"MultiTexture","assignable":false},{"name":"textureLarge","type":"MultiTexture","assignable":false},{"name":"textureRope","type":"MultiTexture","assignable":false},{"name":"textureRopeBase","type":"MultiTexture","assignable":false}],"parent":"HeroRenderProp"},"JS Hero Renderer Properties|fiskheroes:particles":{"methods":[{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[],"parent":"HeroRenderProp"},"JS Accessors|JSHero":{"methods":[{"params":[{"type":"String","name":"name"}],"name":"setName","returns":"void"},{"name":"hide","returns":"void"},{"params":[{"type":"function(JSEntity, JSDataManager)","name":"tickhandler"}],"name":"setTickHandler","returns":"void"},{"params":[{"type":"String","name":"path","desc":"The namespaced path to the external file"}],"name":"implement","returns":"void","desc":"Implements a specified external file in the same directory. By implementing an external file, you gain access to an instance of it, letting you refer to its functions and global variables. You cannot override the functions of an implemented external file.\n\nCan only be invoked in global scope."},{"params":[{"type":"String","name":"key"}],"name":"setPrimaryEquipment","returns":"void","deprecated":true},{"params":[{"type":"String","name":"key"},{"type":"boolean","name":"preIncluded"},{"type":"function(JSItem): returns Boolean","name":"predicate"}],"name":"addPrimaryEquipment","returns":"void"},{"params":[{"type":"String","name":"key"},{"type":"boolean","name":"preIncluded"}],"name":"addPrimaryEquipment","returns":"void"},{"params":[{"type":"function(JSEntity, String): returns Boolean","name":"func"}],"name":"setKeyBindEnabled","returns":"void"},{"params":[{"type":"function(JSEntity, JSRule): returns Object","name":"func"}],"name":"setRuleValueModifier","returns":"void"},{"params":[{"type":"String","name":"key"},{"type":"function(JSAttributeProfile)","name":"func"}],"name":"addAttributeProfile","returns":"void"},{"params":[{"type":"String","name":"key"},{"type":"Object","name":"overrides"}],"name":"addSoundOverrides","returns":"void"},{"params":[{"type":"function(JSEntity, JSModifier): returns Boolean","name":"func"}],"name":"setModifierEnabled","returns":"void"},{"params":[{"type":"function(JSEntity): returns String","name":"func"}],"name":"setAttributeProfile","returns":"void"},{"params":[{"type":"String","name":"version"}],"name":"setVersion","returns":"void"},{"params":[{"type":"String[]","name":"aliases"}],"name":"setAliases","returns":"void"},{"name":"setCosmic","returns":"void","deprecated":true},{"params":[{"type":"String","name":"id"},{"type":"int","name":"metadata"},{"type":"String","name":"nbt"}],"name":"addEquipment","returns":"void","deprecated":true},{"params":[{"type":"String","name":"id"},{"type":"int","name":"metadata"}],"name":"addEquipment","returns":"void","deprecated":true},{"params":[{"type":"String","name":"key"}],"name":"addEquipment","returns":"void"},{"params":[{"type":"String","name":"id"},{"type":"String","name":"nbt"}],"name":"addEquipment","returns":"void","deprecated":true},{"params":[{"type":"String","name":"id"},{"type":"String","name":"name"},{"type":"int","name":"key"}],"name":"addKeyBind","returns":"void"},{"params":[{"type":"String","name":"id"},{"type":"function(JSPlayer, JSDataManager): returns Boolean","name":"func"},{"type":"String","name":"name"},{"type":"int","name":"key"}],"name":"addKeyBindFunc","returns":"void"},{"params":[{"type":"String","name":"key"},{"type":"Object","name":"profile"}],"name":"addDamageProfile","returns":"void"},{"params":[{"type":"function(JSEntity): returns String","name":"func"}],"name":"setDamageProfile","returns":"void"},{"params":[{"type":"int","name":"tier"}],"name":"setTier","returns":"void"},{"params":[{"type":"String[]","name":"names"}],"name":"addPowers","returns":"void"},{"params":[{"type":"function(JSEntity, String): returns Boolean","name":"func"}],"name":"setHasProperty","returns":"void"},{"params":[{"type":"function(JSEntity, String): returns Boolean","name":"func"}],"name":"setHasPermission","returns":"void"},{"params":[{"type":"function(JSEntity, Boolean)","name":"func"}],"name":"setOnToggleMask","returns":"void"},{"params":[{"type":"function(JSEntity): returns Double","name":"func"}],"name":"setDefaultScale","returns":"void"},{"params":[{"type":"double","name":"scale"}],"name":"setDefaultScale","returns":"void"},{"params":[{"type":"function(JSEntity): returns Integer","name":"func"}],"name":"setTierOverride","returns":"void"},{"params":[{"type":"String","name":"trigger"},{"type":"String","name":"event"}],"name":"addSoundEvent","returns":"void"},{"params":[{"type":"String","name":"trigger"},{"type":"String[]","name":"events"}],"name":"addSoundEvent","returns":"void"},{"params":[{"type":"String","name":"key"},{"type":"Object","name":"obj"}],"name":"supplyFunction","returns":"void"},{"params":[{"type":"function(JSEntity): returns Object","name":"key"},{"type":"Function","name":"func"}],"name":"supplyFunction","returns":"void"},{"params":[{"type":"String","name":"key"},{"type":"double","name":"value"},{"type":"int","name":"operator"}],"name":"addAttribute","returns":"void"},{"params":[{"type":"String","name":"name"}],"name":"setBoots","returns":"void"},{"params":[{"type":"String","name":"name"}],"name":"setChestplate","returns":"void"},{"params":[{"type":"String","name":"name"}],"name":"setHelmet","returns":"void"},{"params":[{"type":"String","name":"name"}],"name":"setLeggings","returns":"void"}],"fields":[]},"JS Hero Renderer Effects|fiskheroes:overlay":{"methods":[{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Accessors|JSHeroRenderer":{"methods":[{"params":[{"type":"Map","name":"map","desc":"The map of textures to load"}],"name":"loadTextures","returns":"void","desc":"Loads a key-value map of texture paths to be used elsewhere in the renderer.\n\nCan only be invoked in global scope."},{"params":[{"type":"String","name":"slot","desc":"The slot for which the body parts will be shown"},{"type":"String[]","name":"parts","desc":"The body parts which will be shown"}],"name":"showModel","returns":"void","desc":"Sets what body parts should be shown when rendering the armor piece of this suit for the given slot."},{"params":[{"type":"InitializableResource","name":"resource","desc":"The resource object to be unbound"}],"name":"unbindResource","returns":"void","desc":"Unbinds and unloads a prior created resource object.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String[]","name":"slots","desc":"The slots of the armor pieces"}],"name":"fixHatLayer","returns":"void","desc":"Sets what armor pieces of this suit will flatten the player skin\u0027s hat layer when worn."},{"params":[{"type":"function(JSEntity, String): returns String","name":"func"}],"name":"setTexture","returns":"void","desc":"Sets the base textures to be used for the suit, per the given entity and render layer.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String","name":"key","desc":"The id of the hero renderer effect to create"}],"name":"createEffect","returns":"HeroEffectJS","desc":"Creates a new hero renderer effect resource of the specified type.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String","name":"type","desc":"The resource type of the resource to be created"},{"type":"String","name":"key","desc":"The namespaced path for the resource to load"}],"name":"createResource","returns":"InitializableResource","desc":"Creates and loads a new resource object of the specified type, from the specified path.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String","name":"path","desc":"The namespaced path to the external file"}],"name":"implement","returns":"void","desc":"Implements a specified external file in the same directory. By implementing an external file, you gain access to an instance of it, letting you refer to its functions and global variables. You cannot override the functions of an implemented external file.\n\nCan only be invoked in global scope."},{"params":[{"type":"String","name":"slot","desc":"The slot name of the armor piece whose item icon is being set"},{"type":"String","name":"icon","desc":"The name of the icon file in /textures/items/heroes/, with \"%s\" representing the id of the suit"}],"name":"setItemIcon","returns":"void","desc":"Sets what item icon should be used for the armor piece of this suit for the given slot."},{"params":[{"type":"String","name":"key","desc":"The id of the hero renderer property to bind"}],"name":"bindProperty","returns":"HeroRenderProp","desc":"Creates and binds a new hero renderer property resource of the specified type.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String","name":"path","desc":"The namespaced path to the parent renderer file"}],"name":"extend","returns":"void","desc":"Extends a specified renderer file. By extending a file, you \"insert the code\" of it into your own, letting you refer to and override its functions. Extending a renderer does however not let you access any of its global variables.\n\nCan only be invoked in global scope."},{"params":[{"type":"function(JSEntity, String): returns String","name":"func"}],"name":"setLights","returns":"void","desc":"Sets the light layer textures to be used for the suit, per the given entity and render layer.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String[]","name":"icons","desc":"The name of the icon files in /textures/items/heroes/, with \"%s\" representing the id of the suit"}],"name":"setItemIcons","returns":"void","desc":"Sets the item icons to use for the suit in sequential order; helmet, chestplate, leggings, and boots."},{"params":[{"type":"String","name":"key","desc":"The arbitrary animation name"},{"type":"AnimationHolder","name":"value","desc":"The animation resource object"}],"name":"addCustomAnimation","returns":"void","desc":"Binds the specified animation to the suit. The name provided is arbitrary, and can be anything you choose; it just has to be unique. It\u0027s the same name you need to use when removing an animation.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String","name":"key","desc":"The arbitrary animation name"}],"name":"removeCustomAnimation","returns":"void","desc":"Unbinds any animation added under the specified name, if any such animation exists.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String","name":"key","desc":"The animation event trigger"},{"type":"AnimationEventHolder","name":"value","desc":"The animation event resource object"}],"name":"addAnimationEvent","returns":"void","desc":"Binds the specified animation event to the suit under the given animation event trigger.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"String","name":"key","desc":"The default animation name"},{"type":"float","name":"priority","desc":"The new priority to be assigned"}],"name":"reprioritizeDefaultAnimation","returns":"void","desc":"Changes the order in which the specified default player animation gets applied, relative to any other animations added by this suit.\n\nCan only be invoked during the init() phase."}],"fields":[],"parent":"JSClass"},"JS Hero Renderer Effects|fiskheroes:ears":{"methods":[{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[HEAD]"},{"name":"angle","type":"float","desc":"The angle at which the ears angle outwards, in degrees.","assignable":true,"defVal":"0.0"},{"name":"inset","type":"float","desc":"How far the ears stick into the head.","assignable":true,"defVal":"0.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Hero Renderer Properties|fiskheroes:lightning_cast":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroRenderProp","desc":"Sets this beam to be anchored to the given body part."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroRenderProp","desc":"Sets the beam renderer to use when rendering this beam."},{"params":[{"type":"BeamConstlnHolder","name":"constln","desc":"The beam constellation resource object"}],"name":"setConstellation","returns":"HeroRenderProp","desc":"Sets the beam constellation to use when rendering this beam."},{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use upon impact of this beam."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropBeam"},"JS Hero Renderer Properties|fiskheroes:energy_blast":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroRenderProp","desc":"Sets this beam to be anchored to the given body part."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroRenderProp","desc":"Sets the beam renderer to use when rendering this beam."},{"params":[{"type":"BeamConstlnHolder","name":"constln","desc":"The beam constellation resource object"}],"name":"setConstellation","returns":"HeroRenderProp","desc":"Sets the beam constellation to use when rendering this beam."},{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use upon impact of this beam."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropBeam"},"JS Accessors|JSDamageSource":{"methods":[{"name":"name","returns":"String","desc":"Gets the name of the damage type."},{"name":"isAbsolute","returns":"boolean","desc":"Checks if this damage cannot be modified by potion effects or enchantments."},{"name":"getEntity","returns":"JSEntity","desc":"Gets the entity who responsible for dealing this damage, if any."},{"name":"canHarmInCreative","returns":"boolean","desc":"Checks if this damage can hurt players who are in creative mode, like void damage does."},{"name":"isDifficultyScaled","returns":"boolean","desc":"Checks if this damage cannot be modified by potion effects or enchantments."},{"params":[{"type":"String","name":"type","desc":"The damage type"}],"name":"getDamageFraction","returns":"float"},{"name":"isFireDamage","returns":"boolean","desc":"Checks if this damage was fire-related (i.e. it has the \"FIRE\" damage type)"},{"name":"isExplosion","returns":"boolean","desc":"Checks if this damage was explosive (i.e. it has the \"EXPLOSION\" damage type)"},{"name":"isMagicDamage","returns":"boolean","desc":"Checks if this damage was magic-related (i.e. it has the \"MAGIC\" damage type)"},{"name":"isIndirect","returns":"boolean","desc":"Checks if this damage was dealt by an attacker indirectly, e.g. from a beam."},{"name":"isUnblockable","returns":"boolean","desc":"Checks if this damage cannot be blocked by armor."},{"name":"isMelee","returns":"boolean","desc":"Checks if this damage can be considered melee damage."},{"name":"isProjectile","returns":"boolean","desc":"Checks if this damage was dealt by a projectile."},{"params":[{"type":"String","name":"type","desc":"The damage type"}],"name":"hasDamageType","returns":"boolean"}],"fields":[]},"JS Accessors|JSTentacle":{"methods":[{"name":"getIndex","returns":"int"},{"name":"getCaster","returns":"JSEntity","desc":"Gets the entity to whom this tentacle belongs."},{"name":"getAnchorTimer","returns":"float"},{"name":"getStrikeTimer","returns":"float"},{"name":"getGrabTimer","returns":"float"}],"fields":[],"parent":"JSEntity"},"JS Hero Renderer Resources|MeshVertex":{"methods":[],"fields":[{"name":"vertX","type":"float","assignable":true},{"name":"vertY","type":"float","assignable":true},{"name":"vertZ","type":"float","assignable":true}]},"JS Hero Renderer Resources|CubeOffset":{"methods":[],"fields":[]},"JS Hero Renderer Properties|fiskheroes:cold_gun":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroRenderProp","desc":"Sets this beam to be anchored to the given body part."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroRenderProp","desc":"Sets the beam renderer to use when rendering this beam."},{"params":[{"type":"BeamConstlnHolder","name":"constln","desc":"The beam constellation resource object"}],"name":"setConstellation","returns":"HeroRenderProp","desc":"Sets the beam constellation to use when rendering this beam."},{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use upon impact of this beam."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropBeam"},"JS Hero Renderer Effects|fiskheroes:arm_overlay":{"methods":[{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this effect by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this effect by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this effect by"}],"name":"setOffset","returns":"HeroEffectJS","desc":"Sets the offset of this effect relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"float","name":"x","desc":"The angle by which to rotate this effect around the X-axis"},{"type":"float","name":"y","desc":"The angle by which to rotate this effect around the Y-axis"},{"type":"float","name":"z","desc":"The angle by which to rotate this effect around the Z-axis"}],"name":"setRotation","returns":"HeroEffectJS","desc":"Sets the rotation of this effect relative to its anchor point to the specified amount in degrees."},{"params":[{"type":"String","name":"side"}],"name":"setSide","returns":"HeroEffectJS","desc":"Sets the side on which to render this overlay. Accepted values are \"LEFT\", \"RIGHT\", and \"BOTH\"."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"progress","type":"float","desc":"How far extended this overlay is. More specifically, as \u0027progress\u0027 approaches 1.0, the offset and rotation of the effect approaches those set by the setOffset() and setRotation() functions.","assignable":true,"defVal":"1.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Hero Renderer Properties|fiskheroes:equipped_item":{"methods":[{"params":[{"type":"String","name":"key","desc":"The key of the equipment renderer to test for"},{"type":"float","name":"x","desc":"The X-coordinate to offset by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset by"}],"name":"addOffset","returns":"HeroRenderProp","desc":"Sets the specified offset to be applied on top of the standard offset when the given equipment renderer "},{"params":[{"type":"Object","name":"obj","desc":"Equipped item JSON object"}],"name":"setItems","returns":"HeroRenderProp","desc":"Loads and binds the specified JSON representation of an equipped item object.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"slotIndex","type":"int","desc":"The slot index of the equipment item to be rendered.","assignable":true,"defVal":"0"}],"parent":"HeroRenderProp"},"JS Hero Renderer Resources|CloudHolder":{"methods":[],"fields":[{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Accessors|JSLocation":{"methods":[{"name":"biome","returns":"String","desc":"Gets the name of the biome in this location."},{"name":"getTemperature","returns":"float","desc":"Gets the temperature of the biome in this location, as represented by a (seemingly) arbitrary number. Higher number means higher temperature, but it doesn\u0027t correspond to any specific unit of measurement."},{"name":"isHighHumidity","returns":"boolean","desc":"Checks if the rainfall of the biome in this location is extremely high."},{"name":"getRainfall","returns":"float","desc":"Gets the rainfall of the biome in this location, as represented by a (seemingly) arbitrary number. Higher number means higher rainfall, but it doesn\u0027t correspond to any specific unit of measurement."},{"name":"canSnow","returns":"boolean","desc":"Checks if it can snow in the biome in this location."},{"name":"canRain","returns":"boolean","desc":"Checks if it can rain in the biome in this location."},{"name":"getStructure","returns":"String","desc":"Gets the id of the structure which exists in this location, if any. If none exists, \"null\" is returned."}],"fields":[]},"JS Accessors|JSCactus":{"methods":[{"name":"getCactusSize","returns":"int","desc":"Gets the size of this cactus. 1\u003dsmallest size"}],"fields":[],"parent":"JSEntity"},"JS Hero Renderer Effects|fiskheroes:shield":{"methods":[{"params":[{"type":"float","name":"x","desc":"The angle by which to curve this shield around the X-axis"},{"type":"float","name":"y","desc":"The angle by which to curve this shield around the Y-axis"}],"name":"setCurve","returns":"HeroEffectJS","desc":"Sets the cumulative angles of the curve of this shield to the specified angles in degrees."},{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this effect by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this effect by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this effect by"}],"name":"setOffset","returns":"HeroEffectJS","desc":"Sets the offset of this effect relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"float","name":"x","desc":"The angle by which to rotate this effect around the X-axis"},{"type":"float","name":"y","desc":"The angle by which to rotate this effect around the Y-axis"},{"type":"float","name":"z","desc":"The angle by which to rotate this effect around the Z-axis"}],"name":"setRotation","returns":"HeroEffectJS","desc":"Sets the rotation of this effect relative to its anchor point to the specified amount in degrees."},{"params":[{"type":"float","name":"x","desc":"The X-factor to scale this effect by"},{"type":"float","name":"y","desc":"The Y-factor to scale this effect by"},{"type":"float","name":"z","desc":"The Z-factor to scale this effect by"}],"name":"setScale","returns":"HeroEffectJS","desc":"Sets the scale of this effect to the specified factor."},{"params":[{"type":"float","name":"scale","desc":"The factor to scale this effect by"}],"name":"setScale","returns":"HeroEffectJS","desc":"Sets the scale of this effect to the specified factor."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"unfold","type":"float","desc":"How unfolded this shield is.","assignable":true,"defVal":"1.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"},{"name":"large","type":"boolean","desc":"Whether or not to use the \"large\" shield texture layout.\nIf true, the shield will be 14x22 pixels on a 32x32 texture file.\nIf false, the shield will be 10x12 pixels on 32x16 texture file.","assignable":true,"defVal":"false"},{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[RIGHT_ARM]"},{"name":"mirror","type":"boolean","desc":"Whether or not this effect should render a second mirrored version of itself on the opposite side / anchor body part.","assignable":true,"defVal":"false"}],"parent":"AbstractHeroEffectPositioned"},"JS Hero Renderer Effects|fiskheroes:wingsuit":{"methods":[{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"unfold","type":"float","desc":"How unfolded this wingsuit is.","assignable":true,"defVal":"1.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Accessors|JSPower":{"methods":[{"name":"name","returns":"String","desc":"Gets the registry name of this power."}],"fields":[]},"JS Accessors|JSPlayer":{"methods":[{"name":"isCreativeMode","returns":"boolean","desc":"Checks if this player is in creative mode."},{"name":"isUsingItem","returns":"boolean","desc":"Checks if this player is currently using an item (e.g., bow, food, sword) by holding down the useItemButton (right-click)."},{"name":"getFoodSaturation","returns":"float","desc":"Gets the current food saturation level of this player."},{"name":"getExperienceLevel","returns":"int","desc":"Gets the current experience level that this player is at."},{"name":"getExperience","returns":"int","desc":"Gets the current total amount of experience points held by this player."},{"name":"isBlocking","returns":"boolean","desc":"Checks if this player is currently using an item (e.g., sword) to block by holding down the useItemButton (right-click)."},{"name":"getFoodLevel","returns":"int","desc":"Gets the current food hunger level of this player, in half-haunches."}],"fields":[],"parent":"JSEntity"},"JS Accessors|JSAttributeProfile":{"methods":[{"name":"inheritDefaults","returns":"void"},{"params":[{"type":"String","name":"key"},{"type":"double","name":"value"},{"type":"int","name":"operator"}],"name":"addAttribute","returns":"void"},{"name":"revokeAugments","returns":"void"}],"fields":[]},"JS Hero Renderer Resources|DataLoader":{"methods":[{"params":[{"type":"int","name":"index","desc":"The index to insert this data at"},{"type":"double","name":"data","desc":"The data to insert"}],"name":"load","returns":"void","desc":"Supplies this data loader with the specified data into the specified index. In FSK files, this is reflected as {data_0}, {data_1}, etc. where 0 and 1 are the specified indices."},{"params":[{"type":"double","name":"data","desc":"The data to insert"}],"name":"load","returns":"void","desc":"Convenience function identical to load(0, \u003cdata\u003e)."}],"fields":[]},"JS Accessors|JSQuiver":{"methods":[{"name":"isEmpty","returns":"boolean","desc":"Checks if all slots in this quiver are empty."},{"params":[{"type":"int","name":"slot","desc":"The number of the quiver slot to check. Must be an integer value from 0 to 4 (inclusive)"}],"name":"isEmpty","returns":"boolean","desc":"Checks if the specified quiver slot is empty."},{"params":[{"type":"int","name":"slot","desc":"The number of the quiver slot to check. Must be an integer value from 0 to 4 (inclusive)"}],"name":"getType","returns":"String","desc":"Gets the registry name of the arrow in the specified quiver slot, or null if the slot is empty."},{"name":"isEnchanted","returns":"boolean","desc":"Checks if this quiver has any enchantments."},{"name":"hasQuiver","returns":"boolean","desc":"Checks if this quiver exists."},{"name":"getFirstSlot","returns":"int","desc":"Gets the slot number of the first non-empty slot in this quiver."},{"name":"getActiveSlot","returns":"int","desc":"Gets the slot number of the current active slot in this quiver, from which the compound bow will pull arrows."},{"params":[{"type":"int","name":"slot","desc":"The number of the quiver slot to check. Must be an integer value from 0 to 4 (inclusive)"}],"name":"getAmount","returns":"int","desc":"Gets a visual representation of the fullness of the specified quiver slot. Ranges from 0 to 4 (inclusive)."}],"fields":[]},"JS Hero Renderer Resources|AnimationHolder":{"methods":[{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"AnimationHolder","desc":"Sets a condition which must be fulfilled for this animation to apply."},{"params":[{"type":"function(JSEntity, DataLoader)","name":"func"}],"name":"setData","returns":"AnimationHolder","desc":"Sets the data collecting function. To supply this animation with data inputs, invoke load(index, data) on the DataLoader in the provided function."}],"fields":[{"name":"priority","type":"float","desc":"Controls the order in which this animation plays in relation to others. Lower priority animations are applied first, while higher priorities apply last.","assignable":true},{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Accessors|JSSound":{"methods":[{"name":"pitch","returns":"double","desc":"Gets the pitch of this sound event represented as a decimal from 0.5-1.5, where 0.5 is 50% lower than standard pitch and 1.5 is 50% higher."},{"name":"volume","returns":"double","desc":"Gets the volume of this sound event represented as a decimal from 0.0-1.0, where 1.0 is full volume and 0.0 is silent."},{"params":[{"type":"float","name":"volume"}],"name":"setVolume","returns":"void"},{"params":[{"type":"float","name":"pitch"}],"name":"setPitch","returns":"void"},{"name":"ticksPlaying","returns":"int","desc":"Gets the amount of time this sound has been playing for, in ticks."},{"name":"fadeProgress","returns":"double"}],"fields":[]},"JS Hero Renderer Properties|fiskheroes:camera_shake":{"methods":[{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"factor","type":"float","desc":"The amount in +- degrees that the screen can shake at most.","assignable":true,"defVal":"0.0"},{"name":"intensity","type":"float","desc":"The order of magnitude at which velocity increases camera shake. The camera shake amount is calculated as\n(factor * velocity^intensity)\n\nAn intensity of 0 makes the factor completely independent of velocity.","assignable":true,"defVal":"0.0"}],"parent":"HeroRenderProp"},"JS Hero Renderer Resources|IconHolder":{"methods":[],"fields":[{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Hero Renderer Effects|fiskheroes:chest":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroEffectJS","desc":"Sets this effect to be anchored to the given body part."},{"params":[{"type":"float","name":"extrude","desc":"Amount to extrude by"}],"name":"setExtrude","returns":"HeroEffectJS","desc":"Sets the distance that this effect will protrude from the chest, in pixels.\n\nCan only be invoked during the init() phase."},{"params":[{"type":"float","name":"yOffset"}],"name":"setYOffset","returns":"HeroEffectJS","desc":"Sets how far down from the base of the neck that this effect should render. Given in pixels.\n\nCan only be invoked during the init() phase."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Accessors|JSNBT":{"methods":[{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getBoolean","returns":"boolean","desc":"Gets the (Boolean) value of the sub-tag with the specified key, or false if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getByte","returns":"byte","desc":"Gets the (Byte) value of the sub-tag with the specified key, or 0 if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getShort","returns":"short","desc":"Gets the (Short) value of the sub-tag with the specified key, or 0 if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getLong","returns":"long","desc":"Gets the (Long) value of the sub-tag with the specified key, or 0 if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getFloat","returns":"float","desc":"Gets the (Float) value of the sub-tag with the specified key, or 0 if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getDouble","returns":"double","desc":"Gets the (Double) value of the sub-tag with the specified key, or 0 if no such key is stored."},{"name":"isEmpty","returns":"boolean","desc":"Checks if this NBT tag contains no sub-tags."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getInteger","returns":"int","desc":"Gets the (Integer) value of the sub-tag with the specified key, or 0 if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getString","returns":"String","desc":"Gets the (String) value of the sub-tag with the specified key, or an empty String if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"hasKey","returns":"boolean","desc":"Checks if this NBT tag contains a sub-tag with the specified key."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getCompoundTag","returns":"JSNBT","desc":"Gets the (JSNBT) value of the sub-tag with the specified key, or a new empty NBT tag if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getIntArray","returns":"int[]","desc":"Gets the (Integer Array) value of the sub-tag with the specified key, or an empty Array if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getTagList","returns":"JSNBTList","desc":"Gets the (JSNBTList) value of the sub-tag with the specified key, or a new empty NBT list if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getByteArray","returns":"byte[]","desc":"Gets the (Byte Array) value of the sub-tag with the specified key, or an empty Array if no such key is stored."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getStringList","returns":"JSNBTList","desc":"Gets the (JSNBTList) value of the sub-tag with the specified key, or a new empty NBT list if no such key is stored. Validates that the tag type stored within is String."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getDoubleList","returns":"JSNBTList","desc":"Gets the (JSNBTList) value of the sub-tag with the specified key, or a new empty NBT list if no such key is stored. Validates that the tag type stored within is Double."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getIntArrayList","returns":"JSNBTList","desc":"Gets the (JSNBTList) value of the sub-tag with the specified key, or a new empty NBT list if no such key is stored. Validates that the tag type stored within is Array (Integer)."},{"params":[{"type":"String","name":"key","desc":"The key of the sub-tag"}],"name":"getFloatList","returns":"JSNBTList","desc":"Gets the (JSNBTList) value of the sub-tag with the specified key, or a new empty NBT list if no such key is stored. Validates that the tag type stored within is Float."}],"fields":[]},"JS Hero Renderer Effects|fiskheroes:lines":{"methods":[{"params":[{"type":"ShapeHolder","name":"shape","desc":"The shape resource object"}],"name":"setShape","returns":"HeroEffectJS","desc":"Sets the shape to use when rendering the lines."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroEffectJS","desc":"Sets the beam renderer to use when rendering the lines."},{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this effect by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this effect by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this effect by"}],"name":"setOffset","returns":"HeroEffectJS","desc":"Sets the offset of this effect relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"float","name":"x","desc":"The angle by which to rotate this effect around the X-axis"},{"type":"float","name":"y","desc":"The angle by which to rotate this effect around the Y-axis"},{"type":"float","name":"z","desc":"The angle by which to rotate this effect around the Z-axis"}],"name":"setRotation","returns":"HeroEffectJS","desc":"Sets the rotation of this effect relative to its anchor point to the specified amount in degrees."},{"params":[{"type":"float","name":"x","desc":"The X-factor to scale this effect by"},{"type":"float","name":"y","desc":"The Y-factor to scale this effect by"},{"type":"float","name":"z","desc":"The Z-factor to scale this effect by"}],"name":"setScale","returns":"HeroEffectJS","desc":"Sets the scale of this effect to the specified factor."},{"params":[{"type":"float","name":"scale","desc":"The factor to scale this effect by"}],"name":"setScale","returns":"HeroEffectJS","desc":"Sets the scale of this effect to the specified factor."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":false,"defVal":"0xFFFFFF"},{"name":"progress","type":"float","assignable":true,"defVal":"1.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"},{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[RIGHT_ARM]"},{"name":"mirror","type":"boolean","desc":"Whether or not this effect should render a second mirrored version of itself on the opposite side / anchor body part.","assignable":true,"defVal":"false"}],"parent":"AbstractHeroEffectPositioned"},"JS Hero Renderer Effects|fiskheroes:booster":{"methods":[{"params":[{"type":"float","name":"x","desc":"The X-component of the flame\u0027s size"},{"type":"float","name":"y","desc":"The Y-component of the flame\u0027s size"}],"name":"setSize","returns":"HeroEffectJS","desc":"Sets the base size of the flame."},{"params":[{"type":"IconHolder","name":"icon","desc":"The icon resource object"}],"name":"setIcon","returns":"HeroEffectJS","desc":"Sets the icon to use when rendering the flame."},{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this effect by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this effect by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this effect by"}],"name":"setOffset","returns":"HeroEffectJS","desc":"Sets the offset of this effect relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"float","name":"x","desc":"The angle by which to rotate this effect around the X-axis"},{"type":"float","name":"y","desc":"The angle by which to rotate this effect around the Y-axis"},{"type":"float","name":"z","desc":"The angle by which to rotate this effect around the Z-axis"}],"name":"setRotation","returns":"HeroEffectJS","desc":"Sets the rotation of this effect relative to its anchor point to the specified amount in degrees."},{"params":[{"type":"float","name":"x","desc":"The X-factor to scale this effect by"},{"type":"float","name":"y","desc":"The Y-factor to scale this effect by"},{"type":"float","name":"z","desc":"The Z-factor to scale this effect by"}],"name":"setScale","returns":"HeroEffectJS","desc":"Sets the scale of this effect to the specified factor."},{"params":[{"type":"float","name":"scale","desc":"The factor to scale this effect by"}],"name":"setScale","returns":"HeroEffectJS","desc":"Sets the scale of this effect to the specified factor."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"progress","type":"float","desc":"How far extended the flame is. 1.0 is fully extended.","assignable":true,"defVal":"1.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"},{"name":"flutter","type":"float","desc":"How much the width of the flame varies with time.","assignable":true,"defVal":"1.0"},{"name":"speedScale","type":"float","desc":"How much the length of the flame varies with speed.","assignable":true,"defVal":"1.0"},{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[BODY]"},{"name":"mirror","type":"boolean","desc":"Whether or not this effect should render a second mirrored version of itself on the opposite side / anchor body part.","assignable":true,"defVal":"false"}],"parent":"AbstractHeroEffectPositioned"},"JS Hero Renderer Effects|fiskheroes:opening_mask":{"methods":[{"params":[{"type":"float","name":"x","desc":"The X-coordinate to offset this effect by"},{"type":"float","name":"y","desc":"The Y-coordinate to offset this effect by"},{"type":"float","name":"z","desc":"The Z-coordinate to offset this effect by"}],"name":"setOffset","returns":"HeroEffectJS","desc":"Sets the offset of this effect relative to its anchor point to the specified amount in pixels."},{"params":[{"type":"float","name":"x","desc":"The angle by which to rotate this effect around the X-axis"},{"type":"float","name":"y","desc":"The angle by which to rotate this effect around the Y-axis"},{"type":"float","name":"z","desc":"The angle by which to rotate this effect around the Z-axis"}],"name":"setRotation","returns":"HeroEffectJS","desc":"Sets the rotation of this effect relative to its anchor point to the specified amount in degrees."},{"name":"render","returns":"void","desc":"Renders this effect in its current state. render() may be invoked multiple times in a single frame to render this effect multiple times, often with different properties.\n\nONLY invoke during the render() phase!"}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"anchor","type":"AnchorHolder","desc":"The anchor for this object, determining which body part (if any) that this will render attached to.","assignable":false,"defVal":"Anchor[HEAD]"},{"name":"progress","type":"float","desc":"How far open this mask is. More specifically, as \u0027progress\u0027 approaches 1.0, the offset and rotation of the effect approaches those set by the setOffset() and setRotation() functions.","assignable":true,"defVal":"1.0"},{"name":"opacity","type":"float","desc":"The opacity of this object.","assignable":true,"defVal":"1.0"}],"parent":"HeroEffectJS"},"JS Hero Renderer Resources|MeshResolution":{"methods":[{"params":[{"type":"float","name":"width"},{"type":"float","name":"length"}],"name":"requestResolution","returns":"void"}],"fields":[]},"JS Hero Renderer Properties|fiskheroes:energy_bolt":{"methods":[{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropColor"},"JS Hero Renderer Properties|fiskheroes:gravity_manipulation":{"methods":[{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropColor"},"JS Hero Renderer Resources|CapePhysicsHolder":{"methods":[{"params":[{"type":"String","name":"slot","desc":"The slot based on which the physics will be calculated"}],"name":"setSlot","returns":"CapePhysicsHolder","desc":"Sets which armor piece of this suit the cape physics will be calculated based on."},{"params":[{"type":"Function"}],"name":"setTickHandler","returns":"CapePhysicsHolder"},{"params":[{"type":"JSEntity","name":"entity"}],"name":"getFlutter","returns":"float"},{"params":[{"type":"JSEntity","name":"entity"}],"name":"getCurve","returns":"float"},{"params":[{"type":"JSEntity","name":"entity"}],"name":"getFlare","returns":"float"}],"fields":[{"name":"weight","type":"float","assignable":true},{"name":"maxFlare","type":"float","assignable":true},{"name":"flareDegree","type":"float","assignable":true},{"name":"flareFactor","type":"float","assignable":true},{"name":"flareElasticity","type":"float","assignable":true},{"name":"headingAngle","type":"float","assignable":true},{"name":"restAngle","type":"float","assignable":true},{"name":"restFlare","type":"float","assignable":true},{"name":"idleFlutter","type":"float","assignable":true},{"name":"flutterSpeed","type":"float","assignable":true},{"name":"flutterFactor","type":"float","assignable":true}],"parent":"TickableResource"},"JS Hero Renderer Properties|fiskheroes:livery":{"methods":[{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"texture","type":"MultiTexture","desc":"The texture of this object.","assignable":false},{"name":"weaponType","type":"String","desc":"The weapon type to which the livery should apply.","assignable":true,"defVal":"null"}],"parent":"HeroRenderProp"},"JS Hero Renderer Properties|fiskheroes:equipment_wheel":{"methods":[{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropColor"},"JS Accessors|JSAnimal":{"methods":[{"name":"isInLove","returns":"boolean","desc":"Checks if this animal is currently in \"love mode\"."},{"params":[{"type":"JSItem","name":"item"}],"name":"isBreedingItem","returns":"boolean","desc":"Checks if the specified item can be used to breed this animal."}],"fields":[],"parent":"JSEntity"},"JS Hero Renderer Resources|ModelAnimationHolder":{"methods":[{"params":[{"type":"function(JSEntity, DataLoader)","name":"func"}],"name":"setData","returns":"ModelAnimationHolder","desc":"Sets the data collecting function. To supply this animation with data inputs, invoke load(index, data) on the DataLoader in the provided function."}],"fields":[{"name":"key","type":"String","desc":"The namespaced path key corresponding to the resource object loaded by this holder.","assignable":false}],"parent":"ResourceHolder"},"JS Accessors|JSShadowDome":{"methods":[{"name":"getRadius","returns":"float","desc":"Gets the radius of this shadow dome, in blocks."},{"name":"getCaster","returns":"JSEntity","desc":"Gets the entity who created this shadow dome."},{"name":"getContainedEntities","returns":"List","desc":"Gets a list of all the entities currently within this shadow dome, if any.\nNOTE: This is a computationally expensive lookup, so use it sparingly. Calling it every tick or every frame is NOT a good idea."},{"name":"getMaxDuration","returns":"int","desc":"Gets the maximum amount of time that this shadow dome can last starting from the moment it\u0027s created, in ticks."},{"name":"isDissolving","returns":"boolean","desc":"Checks if this shadow dome is currently dissolving."}],"fields":[],"parent":"JSEntity"},"JS Hero Renderer Properties|fiskheroes:charged_beam":{"methods":[{"params":[{"type":"String","name":"bodyPart","desc":"The body part"}],"name":"setAnchor","returns":"HeroRenderProp","desc":"Sets this beam to be anchored to the given body part."},{"params":[{"type":"BeamRendererHolder","name":"beamRenderer","desc":"The beam renderer resource object"}],"name":"setRenderer","returns":"HeroRenderProp","desc":"Sets the beam renderer to use when rendering this beam."},{"params":[{"type":"BeamConstlnHolder","name":"constln","desc":"The beam constellation resource object"}],"name":"setConstellation","returns":"HeroRenderProp","desc":"Sets the beam constellation to use when rendering this beam."},{"params":[{"type":"ParticleHolder","name":"particles","desc":"The particle emitter resource object"}],"name":"setParticles","returns":"HeroRenderProp","desc":"Sets the particle emitter to use upon impact of this beam."},{"params":[{"type":"function(JSEntity): returns Boolean","name":"func"}],"name":"setCondition","returns":"HeroRenderProp","desc":"Sets the condition under which this property is enabled. By default, the condition is always true."}],"fields":[{"name":"color","type":"CachedColor","desc":"The color of this object.","assignable":true,"defVal":"0xFFFFFF"}],"parent":"AbstractRenderPropBeam"}},"mappings":{"Slot Types":["HELMET","CHESTPLATE","LEGGINGS","BOOTS"],"Status Effects":{"fiskheroes:tutridium":"6","fiskheroes:speed_sickness":"1","fiskheroes:disable_phasing":"3","fiskheroes:flashbang":"4","fiskheroes:velocity_nine":"0","fiskheroes:disable_speed":"2","fiskheroes:stealth":"7","fiskheroes:eternium":"5"},"Hero Permissions":["USE_SHIELD","USE_COLD_GUN","USE_HEAT_GUN","USE_RIPS_GUN","USE_CHRONOS_RIFLE","USE_GRAPPLING_GUN","USE_GUN"],"Equipment Types":["fiskheroes:ricochet_web","fiskheroes:rapid_webs","fiskheroes:fists","fiskheroes:sticky_web","fiskheroes:batarang","fiskheroes:impact_web","fiskheroes:grenade","fiskheroes:freeze_grenade","fiskheroes:smoke_pellet","fiskheroes:throwing_star"],"Fabricator Criteria":{"fiskheroes:item_smelted":{"PLAYER_SMELTING_ITEM":"JSPlayer","ITEM_BEING_SMELTED":"JSItem"},"fiskheroes:item_dropped_by_player":{"PLAYER_DROPPING_ITEM":"JSPlayer","ITEM_BEING_DROPPED":"JSItem"},"fiskheroes:block_broken_by_player":{"PLAYER_BREAKING_BLOCK":"JSPlayer","BLOCK_BEING_BROKEN":"JSBlock"},"fiskheroes:suit_tier":{"MAX_TIER_UNLOCKED":"Integer","PLAYER_UNLOCKING":"JSPlayer"},"fiskheroes:item_destroyed_by_player":{"PLAYER_DESTROYING_ITEM":"JSPlayer","ITEM_BEING_DESTROYED":"JSItem"},"fiskheroes:location":{"PLAYER_IN_LOCATION":"JSPlayer","LOCATION_PLAYER_IS_IN":"JSLocation"},"fiskheroes:item_picked_up_by_player":{"ITEM_BEING_PICKED_UP":"JSItem","PLAYER_PICKING_UP_ITEM":"JSPlayer","PLAYER_TOSSING_ITEM":"JSPlayer"},"fiskheroes:item_consumed_by_player":{"ITEM_BEING_CONSUMED":"JSItem","PLAYER_CONSUMING_ITEM":"JSPlayer"},"fiskheroes:block_placed_by_player":{"PLAYER_PLACING_BLOCK":"JSPlayer","BLOCK_BEING_PLACED":"JSBlock"},"fiskheroes:tick":{"PLAYER_TICKING":"JSPlayer"},"fiskheroes:item_crafted":{"ITEM_BEING_CRAFTED":"JSItem","PLAYER_CRAFTING_ITEM":"JSPlayer"},"fiskheroes:player_hurt":{"PLAYER_HURT":"JSPlayer","DAMAGE_SOURCE":"JSDamageSource"},"fiskheroes:entity_killed_by_player":{"ENTITY_KILLED":"JSEntity","PLAYER_KILLING":"JSPlayer","DAMAGE_SOURCE":"JSDamageSource"},"fiskheroes:ender_pearl_teleport":{"TELEPORT_DESTINATION":"JSCoords","PLAYER_TELEPORTING":"JSPlayer"},"fiskheroes:achievement":{"PLAYER_GETTING_ACHIEVEMENT":"JSPlayer","ACHIEVEMENT_GAINED":"String"},"fiskheroes:player_struck_by_lightning":{"PLAYER_STRUCK":"JSPlayer"},"fiskheroes:player_killed":{"PLAYER_KILLED":"JSPlayer","DAMAGE_SOURCE":"JSDamageSource"},"fiskheroes:entity_hurt_by_player":{"PLAYER_ATTACKING":"JSPlayer","DAMAGE_SOURCE":"JSDamageSource","ENTITY_HURT":"JSEntity"},"fiskheroes:using_item":{"PLAYER_USING_ITEM":"JSPlayer","ITEM_BEING_USED":"JSItem"}},"Data Var Types":["INTEGER","SHORT","BYTE","FLOAT","DOUBLE","STRING","BOOLEAN","FLOAT_INTERP","DOUBLE_INTERP"],"Attributes":["DAMAGE_REDUCTION","BASE_SPEED_LEVELS","PUNCH_DAMAGE","WEAPON_DAMAGE","IMPACT_DAMAGE","ARROW_DAMAGE","BOW_DRAWBACK","REACH_DISTANCE","BASE_SPEED","JUMP_HEIGHT","FALL_RESISTANCE","KNOCKBACK","MAX_HEALTH","SPRINT_SPEED","STEP_HEIGHT"],"JSON Hero Renderer Effects":["fiskheroes:archery","fiskheroes:deadpool_sheath","fiskheroes:equipped_item","fiskheroes:vibration","fiskheroes:shield","fiskheroes:arm_overlay","fiskheroes:ears","fiskheroes:gravity_manipulation","fiskheroes:invisibility","fiskheroes:arm_animation","fiskheroes:wingsuit","fiskheroes:cold_gun","fiskheroes:antennae","fiskheroes:glowerlay","fiskheroes:energy_blast","fiskheroes:heat_vision","fiskheroes:opening_mask","fiskheroes:mantapack","fiskheroes:energy_bolt","fiskheroes:equipment_wheel","fiskheroes:chestplate","fiskheroes:animation","fiskheroes:teleportation","fiskheroes:model","fiskheroes:trail","fiskheroes:lightning_attack","fiskheroes:spellcasting","fiskheroes:repulsor_blast","fiskheroes:wings","fiskheroes:telekinesis","fiskheroes:spell","fiskheroes:energy_projection","fiskheroes:energy_manipulation","fiskheroes:chest","fiskheroes:shadowdome","fiskheroes:overlay","fiskheroes:flames","fiskheroes:tentacles","fiskheroes:particle_cloud","fiskheroes:forcefield","fiskheroes:beam","fiskheroes:prometheus_sheath","fiskheroes:particles","fiskheroes:booster","fiskheroes:charged_beam","fiskheroes:metal_heat","fiskheroes:cape","fiskheroes:telekinesis_chain"],"Potion Effects":{"minecraft:instant_health":"6","fiskheroes:space_breathing":"85","minecraft:instant_damage":"7","minecraft:resistance":"11","minecraft:weakness":"18","minecraft:hunger":"17","minecraft:fire_resistance":"12","minecraft:slowness":"2","minecraft:strength":"5","minecraft:poison":"19","minecraft:absorption":"22","minecraft:mining_fatigue":"4","minecraft:health_boost":"21","minecraft:night_vision":"16","minecraft:invisibility":"14","minecraft:saturation":"23","minecraft:nausea":"9","minecraft:regeneration":"10","minecraft:jump_boost":"8","minecraft:haste":"3","minecraft:blindness":"15","minecraft:wither":"20","minecraft:speed":"1","minecraft:water_breathing":"13"},"JS Hero Renderer Resource Types":{"PARTICLE_EMITTER":"ParticleHolder","SHAPE":"ShapeHolder","TRAIL":"TrailHolder","BEAM_CONSTELLATION":"BeamConstlnHolder","ANIMATION":"AnimationHolder","ANIMATION_EVENT":"AnimationEventHolder","MESH":"MeshHolder","CAPE_PHYSICS":"CapePhysicsHolder","MODEL":"ModelHolder","ICON":"IconHolder","PARTICLE_CLOUD":"CloudHolder","BEAM_RENDERER":"BeamRendererHolder"},"Particle Types":{"FLAME_BALL":false,"MYSTERIO_SMOKE":false,"SHORT_FLAME":false,"BLUE_FLAME":false,"SMOKE_SMALL":false,"THICK_SMOKE":false,"BULLET_SPARK":false,"SPARK":false,"FLAME":false,"FREEZE_RAY":false,"ENERGY_SMOKE":true,"SUBATOMIC_CHARGE":false,"DWARF_STAR_ENERGY":false,"ETERNIUM_AURA":false,"FIREWORK_BACKGROUND":true,"BIG_SMOKE":false,"SMOKE":false,"SHADOW_SMOKE":false,"FREEZE_SMOKE":false,"CRYO_SMOKE":false,"QUANTUM_PARTICLE":false},"Hero Properties":["MASK_TOGGLE","BREATHE_SPACE"],"Weapon Types":["KATANA","SHIELD","TONFA","BO_STAFF","COMPOUND_BOW","GRAPPLING_GUN","RUPTURES_SCYTHE","CHRONOS_RIFLE","RIPS_GUN","COLD_GUN","HEAT_GUN","ARROW","QUIVER","DESERT_EAGLE","BERETTA_93R","CHOKUTO","AMMO_BAG","SCIMITAR"],"Shape Data Formats":["CIRCLES","LINES","WIREFRAME"],"Damage Properties":{"COOK_ENTITY":"Boolean","REDUCE_KNOCKBACK":"Float","DAMAGE_DROPOFF":"Float","HEAT_TRANSFER":"Integer","HIT_COOLDOWN":"Integer","ADD_KNOCKBACK":"Float","IGNITE":"Integer","LIGHTNING_STRIKE":"Float","EFFECTS":"List"},"Spell Types":["fiskheroes:blindness","fiskheroes:whip","fiskheroes:earth_swallowing","fiskheroes:atmospheric","fiskheroes:duplication","fiskheroes:drones"],"Equipment Renderers":["TACHYON_PROTOTYPE","AMMO_BAG","CONQUEST_BADGE","REWARD_GEM","TACHYON_DEVICE","QUIVER","EQUIPPED_ITEM"],"Accessor Types":{"PLAYER":"JSPlayer","ENTITY":"JSEntity","LIVING":"JSEntity","ANIMAL":"JSAnimal","CACTUS":"JSCactus","TAMEABLE":"JSTameable","SHEEP":"JSSheep","SHADOWDOME":"JSShadowDome","TENTACLE":"JSTentacle","OWNABLE":"JSOwnable","SLIME":"JSSlime","SKELETON":"JSSkeleton"},"Sound Event Targets":["ONLY_SELF","OTHERS_IN_RANGE","ALL_IN_RANGE","ALL_OTHERS","ALL"],"Beam Render Types":["LASER","LIGHTNING","LINE"],"Default Animations":["PUNCH","AIM_BOW"],"Biomes":["Ocean","Plains","Desert","Extreme Hills","Forest","Taiga","Swampland","River","Hell","Sky","FrozenOcean","FrozenRiver","Ice Plains","Ice Mountains","MushroomIsland","MushroomIslandShore","Beach","DesertHills","ForestHills","TaigaHills","Extreme Hills Edge","Jungle","JungleHills","JungleEdge","Deep Ocean","Stone Beach","Cold Beach","Birch Forest","Birch Forest Hills","Roofed Forest","Cold Taiga","Cold Taiga Hills","Mega Taiga","Mega Taiga Hills","Extreme Hills+","Savanna","Savanna Plateau","Mesa","Mesa Plateau F","Mesa Plateau","Sunflower Plains","Desert M","Extreme Hills M","Flower Forest","Taiga M","Swampland M","Ice Plains Spikes","Jungle M","JungleEdge M","Birch Forest M","Birch Forest Hills M","Roofed Forest M","Cold Taiga M","Mega Spruce Taiga","Mega Spruce Taiga","Extreme Hills+ M","Savanna M","Savanna Plateau M","Mesa (Bryce)","Mesa Plateau F M","Mesa Plateau M"],"Data Variables":{"fiskheroes:qr_origin":"DimensionalCoords","fiskheroes:recoil":"Float","fiskheroes:intangible":"Boolean","fiskheroes:size_state":"Byte","fiskheroes:mask_open_timer":"Byte","fiskheroes:prev_shield_timer":"Float","fiskheroes:swing_progress":"Float","fiskheroes:web_aim_right_timer":"Float","fiskheroes:prev_hat_tip":"Float","fiskheroes:beam_charge":"Float","fiskheroes:heat_vision_timer":"Float","fiskheroes:prev_swing_progress":"Float","fiskheroes:aiming":"Boolean","fiskheroes:prev_aiming_timer":"Float","fiskheroes:invisibility_timer":"Float","fiskheroes:prev_flight_boost_timer":"Float","fiskheroes:prev_scale":"Float","fiskheroes:swing_progress_int":"Byte","fiskheroes:prev_mask_open_timer2":"Float","fiskheroes:cryo_charging":"Boolean","fiskheroes:speed_experience_level":"Byte","fiskheroes:beam_shooting":"Float","fiskheroes:prev_jetpacking_timer":"Float","fiskheroes:beam_charging":"Boolean","fiskheroes:prev_barrel_roll_timer":"Float","fiskheroes:speed_level_up_cooldown":"Integer","fiskheroes:shield_damage":"Float","fiskheroes:prev_lightsout_timer":"Float","fiskheroes:speeding":"Boolean","fiskheroes:ticks_since_webshoot":"Short","fiskheroes:scope_timer":"Float","fiskheroes:energy_projection_timer":"Float","fiskheroes:prev_blade_timer":"Float","fiskheroes:horizontal_bow_timer":"Float","fiskheroes:punchmode_timer":"Float","fiskheroes:tentacle_extend_timer":"Float","fiskheroes:utility_belt_type":"Byte","fiskheroes:shield_timer":"Float","fiskheroes:tachyon_device_on":"Boolean","fiskheroes:sonic_waves":"Boolean","fiskheroes:grab_id":"Integer","fiskheroes:punch_charge":"Float","fiskheroes:lightsout":"Boolean","fiskheroes:ability_cooldowns":"CooldownContainer","fiskheroes:penetrate_martian_invis":"Boolean","fiskheroes:prev_recoil":"Float","fiskheroes:punchmode":"Boolean","fiskheroes:prev_flight_timer":"Float","fiskheroes:blade":"Boolean","fiskheroes:wing_animation_timer":"Float","fiskheroes:slow_motion":"Boolean","fiskheroes:levitate_timer":"Float","fiskheroes:tentacles_retracting":"Boolean","fiskheroes:prev_beam_shooting":"Float","fiskheroes:prev_shield_blocking_timer":"Float","fiskheroes:prev_reload_timer":"Float","fiskheroes:energy_charge":"Float","fiskheroes:treadmill_limb_factor":"Float","fiskheroes:invisible":"Boolean","fiskheroes:gliding":"Boolean","fiskheroes:scale":"Float","fiskheroes:equipped_tachyon_device_slot":"Byte","fiskheroes:hovering":"Boolean","fiskheroes:speed":"Byte","fiskheroes:prev_on_ground":"Boolean","fiskheroes:prev_invisibility_timer":"Float","fiskheroes:prev_treadmill_limb_factor":"Float","fiskheroes:flight_timer":"Float","fiskheroes:is_swing_in_progress":"Boolean","fiskheroes:telekinesis":"Boolean","fiskheroes:time_since_damaged":"Short","fiskheroes:prev_wing_animation_timer":"Float","fiskheroes:disguise":"String","fiskheroes:prev_punch_charge":"Float","fiskheroes:metal_heat":"Float","fiskheroes:ticks_since_gunshot":"Short","fiskheroes:prev_beam_shooting_timer":"Float","fiskheroes:beam_shooting_timer":"Float","fiskheroes:gun_shooting_timer":"Float","fiskheroes:prev_web_aim_right_timer":"Float","fiskheroes:teleport_dest":"DimensionalCoords","fiskheroes:prev_treadmill_limb_progress":"Float","fiskheroes:tentacle_lift":"Boolean","fiskheroes:prev_punchmode_timer":"Float","fiskheroes:web_swinging_timer":"Float","fiskheroes:teleport_delay":"Byte","fiskheroes:equipped_quiver":"Quiver","fiskheroes:blade_timer":"Float","fiskheroes:tachyon_charge":"Float","fiskheroes:aimed_timer":"Float","fiskheroes:equipped_ammo_bag":"Byte","fiskheroes:flight_animation":"Byte","fiskheroes:reload_timer":"Float","fiskheroes:grab_distance":"Float","fiskheroes:prev_scope_timer":"Float","fiskheroes:barrel_roll_timer":"Float","fiskheroes:glide_flying":"Boolean","fiskheroes:spell_fraction":"Float","fiskheroes:jetpacking_timer":"Float","fiskheroes:mask_open_timer2":"Float","fiskheroes:shield_cooldown":"Short","fiskheroes:player_animation":"AnimationState","fiskheroes:prev_heat_vision_timer":"Float","fiskheroes:lightsout_timer":"Float","fiskheroes:spodermen":"Boolean","fiskheroes:shape_shifting":"Boolean","fiskheroes:prev_beam_charge":"Float","fiskheroes:prev_shadowform_timer":"Float","fiskheroes:prev_web_swinging_timer":"Float","fiskheroes:shape_shift_timer":"Float","fiskheroes:spellcast_timer":"Float","fiskheroes:web_rope_id":"Integer","fiskheroes:vel9_convert":"Float","fiskheroes:treadmill_decreasing":"Boolean","fiskheroes:qr_timer":"Float","fiskheroes:prev_utility_belt_type":"Byte","fiskheroes:tentacles":"List","fiskheroes:equipped_quiver_slot":"Byte","fiskheroes:teleport_timer":"Float","fiskheroes:punch_charged":"Boolean","fiskheroes:gravity_manip":"Boolean","fiskheroes:prev_energy_projection_timer":"Float","fiskheroes:prev_metal_heat":"Float","fiskheroes:prev_teleport_timer":"Float","fiskheroes:heat_vision_length":"Double","fiskheroes:hat_tip":"Float","fiskheroes:shape_shifting_to":"String","fiskheroes:prev_web_aim_left_timer":"Float","fiskheroes:shield_blocking_timer":"Float","fiskheroes:selected_arrow":"Byte","fiskheroes:prev_energy_charge":"Float","fiskheroes:shadowform":"Boolean","fiskheroes:metal_heat_cooldown":"Short","fiskheroes:prev_gun_shooting_timer":"Float","fiskheroes:flight_boost_timer":"Float","fiskheroes:superhero_landing":"Boolean","fiskheroes:shield":"Boolean","fiskheroes:grabbed_by":"Integer","fiskheroes:prev_tachyon_charge":"Float","fiskheroes:lightsout_id":"Integer","fiskheroes:current_arrow":"ItemStack","fiskheroes:prev_aimed_timer":"Float","fiskheroes:gliding_timer":"Float","fiskheroes:prev_levitate_timer":"Float","fiskheroes:speed_experience_bar":"Float","fiskheroes:ticks_since_shield_damaged":"Short","fiskheroes:tonfa_state":"Byte","fiskheroes:aiming_timer":"Float","fiskheroes:energy_charging":"Boolean","fiskheroes:shield_blocking":"Boolean","fiskheroes:shadowform_timer":"Float","fiskheroes:prev_horizontal_bow_timer":"Float","fiskheroes:prev_intangibility_timer":"Float","fiskheroes:horizontal_bow":"Boolean","fiskheroes:prev_spellcast_timer":"Float","fiskheroes:cryo_charge":"Float","fiskheroes:ticks_since_swinging":"Short","fiskheroes:web_rappel_timer":"Float","fiskheroes:prev_web_rappel_timer":"Float","fiskheroes:wall_crawling":"WallCrawling","fiskheroes:speed_experience_total":"Integer","fiskheroes:shape_shifting_from":"String","fiskheroes:suit_open_timer":"Byte","fiskheroes:prev_heat_vision_length":"Double","fiskheroes:intangibility_timer":"Float","fiskheroes:web_swinging":"Boolean","fiskheroes:energy_projection":"Boolean","fiskheroes:mask_open":"Boolean","fiskheroes:jetpacking":"Boolean","fiskheroes:heat_vision":"Boolean","fiskheroes:prev_vel9_convert":"Float","fiskheroes:treadmill_limb_progress":"Float","fiskheroes:prev_gliding_timer":"Float","fiskheroes:web_aim_left_timer":"Float","fiskheroes:flying":"Boolean","fiskheroes:gravity_amount":"Float","fiskheroes:prev_tentacle_extend_timer":"Float","fiskheroes:suit_open":"Boolean"},"Rules":{"fiskheroes:equipment.grenade.damageProfile.damage":"Float","fiskheroes:earthquake.damageProfile.damage":"Float","fiskheroes:equipment.rapid_webs.damageProfile.damage":"Float","fiskheroes:spells.duplication.cooldown":"Float","fiskheroes:energy_manipulation.range":"Float","fiskheroes:fire_weakness.duration":"Float","fiskheroes:damage_resistance.factor":"Float","fiskheroes:fire_resistance.duration":"Float","fiskheroes:spells.drones.quantity":"Float","fiskheroes:repulsor_blast.range":"Float","fiskheroes:fireball.cooldownTime":"Float","fiskheroes:gliding.gliding.gravity":"Float","fiskheroes:dmgmult_bullet":"Float","fiskheroes:lightning_cast.chainRadius":"Float","fiskheroes:equipment.freeze_grenade.uses":"Float","fiskheroes:lightning_cast.cooldownTime":"Float","fiskheroes:energy_bolt.damageProfile.damage":"Float","fiskheroes:fire_weakness.radius":"Float","fiskheroes:range_heatgun":"Float","fiskheroes:ticks_coldgun":"Integer","fiskheroes:charged_beam.cooldownTime":"Float","fiskheroes:cryoball.damageProfile.damage":"Float","fiskheroes:ticks_metalskin_blazearrow":"Integer","fiskheroes:earthquake.cooldownTime":"Float","fiskheroes:equipment.smoke_pellet.cooldown":"Float","fiskheroes:grief_coldgun":"Boolean","fiskheroes:ticks_metalskin_heatgun":"Integer","fiskheroes:equipment.rapid_webs.quantity":"Float","fiskheroes:ticks_qrtimer":"Integer","fiskheroes:damage_reduction_factor":"Float","fiskheroes:web_zip.range":"Float","fiskheroes:gliding.boostSpeed":"Float","fiskheroes:allow_sentrymode":"Boolean","fiskheroes:equipment.fists.cooldown":"Float","fiskheroes:cryoball.cooldownTime":"Float","fiskheroes:equipment.impact_web.cooldown":"Float","fiskheroes:repulsor_blast.spread":"Float","fiskheroes:shadowdome.duration":"Float","fiskheroes:energy_projection.range":"Float","fiskheroes:radius_explosivearrow":"Float","fiskheroes:equipment.throwing_star.uses":"Float","fiskheroes:spells.whip.whipDamage.whipBurn.frequency":"Float","fiskheroes:spells.drones.damageProfile.damage":"Float","fiskheroes:flame_blast.range":"Float","fiskheroes:energy_blast.cooldownTime":"Float","fiskheroes:ammo_beretta93r":"Integer","fiskheroes:equipment.grenade.cooldown":"Float","fiskheroes:spells.whip.cooldown":"Float","fiskheroes:spells.earth_swallowing.cooldown":"Float","fiskheroes:equipment.batarang.damageProfile.damage":"Float","fiskheroes:dmgmult_beretta93r":"Float","fiskheroes:grief_thrownshield":"Boolean","fiskheroes:leaping.leapAmount.vert":"Float","fiskheroes:dmg_qr_suffocate":"Float","fiskheroes:spells.drones.range":"Float","fiskheroes:equipment.grenade.radius":"Float","fiskheroes:tentacles.climbing.range":"Float","fiskheroes:equipment.ricochet_web.damageProfile.damage":"Float","fiskheroes:gliding.knockback":"Float","fiskheroes:dmgmult_deserteagle":"Float","fiskheroes:charged_beam.duration":"Float","fiskheroes:energy_blast.damageProfile.damage":"Float","fiskheroes:gravity_manipulation.radius":"Float","fiskheroes:recoil_beretta93r":"Float","fiskheroes:size_manipulation.maxSize":"Float","fiskheroes:energy_blast.range":"Float","fiskheroes:repulsor_blast.radius":"Float","fiskheroes:charged_beam.chargeTime":"Float","fiskheroes:grief_heatvision":"Boolean","fiskheroes:regeneration.factor":"Float","fiskheroes:dmg_fireballarrow":"Float","fiskheroes:tentacles.damageProfile.damage":"Float","fiskheroes:equipment.batarang.uses":"Float","fiskheroes:recoil_deserteagle":"Float","fiskheroes:spread_deserteagle":"Float","fiskheroes:tentacles.tentacleStrike.chargeTime":"Float","fiskheroes:gravity_manipulation.maxGravity":"Float","fiskheroes:equipment.ricochet_web.uses":"Float","fiskheroes:spike_burst.damageProfile.damage":"Float","fiskheroes:spells.whip.whipDamage.damageProfile.damage":"Float","fiskheroes:flame_blast.damageProfile.damage":"Float","fiskheroes:shadowdome.radius":"Float","fiskheroes:energy_projection.radius":"Float","fiskheroes:controlled_flight.speed":"Float","fiskheroes:equipment.sticky_web.dissolveTime":"Float","fiskheroes:dmg_coldgun":"Float","fiskheroes:grief_chargedbeam":"Boolean","fiskheroes:telekinesis.range":"Float","fiskheroes:cryoball.radius":"Float","fiskheroes:allow_qr":"Boolean","fiskheroes:earthquake.knockback":"Float","fiskheroes:spells.blindness.duration":"Float","fiskheroes:gravity_manipulation.range":"Float","fiskheroes:equipment.sticky_web.cooldown":"Float","fiskheroes:spells.atmospheric.damageProfile.damage":"Float","fiskheroes:ground_smash.radius":"Float","fiskheroes:speed_disintegration.factor":"Float","fiskheroes:ticks_phantomarrow":"Integer","fiskheroes:ticks_cactuslifespan":"Integer","fiskheroes:icicles.spread":"Float","fiskheroes:web_swinging.cooldownTime":"Float","fiskheroes:radius_fireballarrow":"Float","fiskheroes:cooldown_chronosrifle":"Integer","fiskheroes:controlled_flight.boostSpeed":"Float","fiskheroes:dmg_energychargebonus":"Float","fiskheroes:spells.blindness.range":"Float","fiskheroes:thorns.factor":"Float","fiskheroes:icicles.cooldownTime":"Float","fiskheroes:heat_vision.damageProfile.damage":"Float","fiskheroes:spells.drones.cooldown":"Float","fiskheroes:spells.blindness.cooldown":"Float","fiskheroes:spells.whip.whipDamage.whipBurn.damageProfile.damage":"Float","fiskheroes:equipment.grenade.uses":"Float","fiskheroes:icicles.damageProfile.damage":"Float","fiskheroes:ground_smash.knockback":"Float","fiskheroes:tentacles.climbing.tolerance":"Float","fiskheroes:healing_factor.delay":"Float","fiskheroes:damage_weakness.factor":"Float","fiskheroes:cooldown_coldgun":"Integer","fiskheroes:ticks_cactushealrate":"Integer","fiskheroes:grief_energyproj":"Boolean","fiskheroes:lightning_cast.damageProfile.damage":"Float","fiskheroes:cactus_recruitment.cooldownTime":"Float","fiskheroes:repulsor_blast.speed":"Float","fiskheroes:spells.earth_swallowing.range":"Float","fiskheroes:equipment.throwing_star.cooldown":"Float","fiskheroes:damage_bonus.amount":"Float","fiskheroes:grief_disableall":"Boolean","fiskheroes:cactus_recruitment.range":"Float","fiskheroes:ticks_reload_desert_eagle":"Integer","fiskheroes:gravity_manipulation.minGravity":"Float","fiskheroes:charged_punch.chargeTime":"Float","fiskheroes:charged_beam.radius":"Float","fiskheroes:shield_throwing.cooldownTime":"Float","fiskheroes:dmg_heatgun":"Float","fiskheroes:energy_manipulation.damageProfile.damage":"Float","fiskheroes:gliding.gliding.stall":"Float","fiskheroes:ammo_deserteagle":"Integer","fiskheroes:equipment.impact_web.uses":"Float","fiskheroes:spells.atmospheric.pushPower":"Float","fiskheroes:flight.speed":"Float","fiskheroes:leaping.leapAmount.horiz":"Float","fiskheroes:range_coldgun":"Float","fiskheroes:grief_flameblast":"Boolean","fiskheroes:spells.duplication.quantity":"Float","fiskheroes:frost_walking.radius":"Float","fiskheroes:ground_smash.damageProfile.damage":"Float","fiskheroes:earthquake.radius":"Float","fiskheroes:tentacles.tentacleStrike.damageProfile.damage":"Float","fiskheroes:ground_smash.cooldownTime":"Float","fiskheroes:repulsor_blast.cooldownTime":"Float","fiskheroes:equipment.rapid_webs.cooldown":"Float","fiskheroes:equipment.rapid_webs.uses":"Float","fiskheroes:earthquake.duration":"Float","fiskheroes:tentacles.climbing.speed":"Float","fiskheroes:sonic_waves.knockback":"Float","fiskheroes:icicles.quantity":"Float","fiskheroes:charged_beam.range":"Float","fiskheroes:grief_firechargearrow":"Boolean","fiskheroes:equipment.smoke_pellet.uses":"Float","fiskheroes:size_manipulation.minSize":"Float","fiskheroes:equipment.grenade.fuseTime":"Float","fiskheroes:dmgmult_arrow":"Float","fiskheroes:ticks_tutridiumarrow":"Integer","fiskheroes:grief_canarycry":"Boolean","fiskheroes:grief_geokinesis":"Boolean","fiskheroes:range_deserteagle":"Float","fiskheroes:equipment.ricochet_web.cooldown":"Float","fiskheroes:repulsor_blast.damageProfile.damage":"Float","fiskheroes:allow_intangibility":"Boolean","fiskheroes:equipment.sticky_web.uses":"Float","fiskheroes:grief_tentaclejab":"Boolean","fiskheroes:spells.atmospheric.cooldown":"Float","fiskheroes:equipment.impact_web.damageProfile.damage":"Float","fiskheroes:charged_beam.damageProfile.damage":"Float","fiskheroes:damage_reduction_baseline":"Float","fiskheroes:equipment.throwing_star.damageProfile.damage":"Float","fiskheroes:lightning_cast.range":"Float","fiskheroes:dmgmult_laserbolt":"Float","fiskheroes:spells.earth_swallowing.damageProfile.damage":"Float","fiskheroes:shadowdome.chargeTime":"Float","fiskheroes:eternium_weakness.radius":"Float","fiskheroes:heat_vision.range":"Float","fiskheroes:tentacles.range":"Float","fiskheroes:ticks_metalskin_lava":"Integer","fiskheroes:teleportation.range":"Float","fiskheroes:velmult_arrow":"Float","fiskheroes:spike_burst.cooldownTime":"Float","fiskheroes:equipment.fists.uses":"Float","fiskheroes:controlled_flight.knockback":"Float","fiskheroes:equipment.freeze_grenade.cooldown":"Float","fiskheroes:ticks_reload_beretta93r":"Integer","fiskheroes:spells.earth_swallowing.radius":"Float","fiskheroes:gliding.gliding.lift":"Float","fiskheroes:grief_heatgun":"Boolean","fiskheroes:energy_manipulation.chargeTime":"Float","fiskheroes:grief_bullet":"Boolean","fiskheroes:heat_vision.radius":"Float","fiskheroes:range_beretta93r":"Float","fiskheroes:durability_scaled_prot":"Boolean","fiskheroes:dmg_snake":"Float","fiskheroes:fireball.radius":"Float","fiskheroes:web_zip.cooldownTime":"Float","fiskheroes:sonic_waves.damageProfile.damage":"Float","fiskheroes:gliding.gliding.speed":"Float","fiskheroes:fireball.damageProfile.damage":"Float","fiskheroes:energy_projection.damageProfile.damage":"Float","fiskheroes:equipment.freeze_grenade.damageProfile.damage":"Float","fiskheroes:equipment.batarang.cooldown":"Float","fiskheroes:energy_bolt.cooldownTime":"Float","fiskheroes:spread_beretta93r":"Float","fiskheroes:cooldown_deserteagle":"Integer","fiskheroes:eternium_weakness.duration":"Float","fiskheroes:thorns.damageProfile.damage":"Float","fiskheroes:cooldown_beretta93r":"Integer","fiskheroes:shield.knockback":"Float","fiskheroes:cooldown_ripsgun":"Integer"},"Animation Events":["WEBSWING_DEFAULT","WEBSWING_RIGHT","WEBSWING_LEFT","WEBSWING_ZIP","WEBSWING_LEAP","WEBSWING_DIVE","WEBSWING_TRICK_DEFAULT","WEBSWING_TRICK_RIGHT","WEBSWING_TRICK_LEFT","WEBSWING_SHOOT_RIGHT","WEBSWING_SHOOT_LEFT","WEBSHOOTER_SHOOT_RIGHT","WEBSHOOTER_SHOOT_LEFT","WALL_CRAWL","CEILING_CRAWL"],"Body Parts":["head","headwear","body","rightArm","leftArm","rightLeg","leftLeg"],"Texture Operations":["XOR","AND","OR","HUE","MULTIPLY","ADD","STITCH"],"Texture Stitcher Transforms":["MIRROR_X","MIRROR_Y","ROTATE_180","ROTATE_RIGHT","ROTATE_LEFT"],"Achievements":["achievement.fiskheroes.suitFabricator","achievement.fiskheroes.suitIterator","achievement.fiskheroes.cosmicFabricator","achievement.fiskheroes.killCreetle","achievement.fiskheroes.tier1","achievement.fiskheroes.tier10","achievement.fiskheroes.downloadSuit","achievement.fiskheroes.kmph1000","achievement.fiskheroes.maxSpeed","achievement.fiskheroes.quantumRealm","achievement.fiskheroes.tachyons","achievement.fiskheroes.blackHole","achievement.fiskheroes.glideFaceplant","achievement.fiskheroes.language","achievement.fiskheroes.landing","achievement.fiskheroes.moon","achievement.fiskheroes.masonryOven","achievement.fiskheroes.badPizza","achievement.fiskheroes.speedCure","achievement.fiskheroes.allDebuffs","achievement.fiskheroes.gameboii","achievement.fiskheroes.batfish","achievement.fiskheroes.spodermen","achievement.fiskheroes.allSuits","achievement.fiskheroes.allArrows","achievement.fiskheroes.displayCase","achievement.fiskheroes.secret","achievement.openInventory","achievement.mineWood","achievement.buildWorkBench","achievement.buildPickaxe","achievement.buildFurnace","achievement.acquireIron","achievement.buildHoe","achievement.makeBread","achievement.bakeCake","achievement.buildBetterPickaxe","achievement.cookFish","achievement.onARail","achievement.buildSword","achievement.killEnemy","achievement.killCow","achievement.flyPig","achievement.snipeSkeleton","achievement.diamonds","achievement.diamondsToYou","achievement.portal","achievement.ghast","achievement.blazeRod","achievement.potion","achievement.theEnd","achievement.theEnd2","achievement.enchantments","achievement.overkill","achievement.bookcase","achievement.breedCow","achievement.spawnWither","achievement.killWither","achievement.fullBeacon","achievement.exploreAllBiomes"],"Structure Types":["eternity_nexus"],"Power Properties":{"damageBonus":"Object","canGrab":"Object","isPowered":"Object","knockback":"Float","canReachMoon":"Object","affectsUser":"Object","minGravity":"Float","cooldown":"Object","minSize":"Float","radius":"Float","climbing":"Climbing","potionEffects":"Object","tentacles":"Object","chargeTime":"Integer","canRoll":"Object","equipment":"EquipmentSet","isControlled":"Object","collision":"Object","delay":"Integer","canBreakGlass":"Object","gliding":"Gliding","shield":"Object","chainRadius":"Float","leapAmount":"Leaping","isInstant":"Object","range":"Float","maxSize":"Float","telekinesis":"Object","speed":"Float","duration":"Integer","canJumpActivate":"Object","factor":"Float","spells":"SpellSet","key":"Object","coverage":"Object","damageProfile":"DamageProfile","amount":"Float","canUseTreadmill":"Object","quantity":"Integer","tentacleStrike":"TentacleStrike","transformation":"Object","canBoost":"Object","spread":"Float","soundEvents":"Object","boostSpeed":"Float","isToggle":"Object","isAbsolute":"Object","isExplosive":"Object","maxGravity":"Float","cooldownTime":"Integer","damageType":"Object"},"Database Price Types":["IRID_GOLD","TUTRIDIUM","XP_LEVELS"],"Modifiers":{"fiskheroes:cryoball":["soundEvents","cooldownTime","radius","damageProfile"],"fiskheroes:charged_punch":["soundEvents","isToggle","chargeTime"],"fiskheroes:thorns":["soundEvents","factor","damageProfile"],"fiskheroes:fire_immunity":[],"fiskheroes:icicles":["soundEvents","cooldownTime","quantity","spread","damageProfile"],"fiskheroes:repulsor_blast":["soundEvents","cooldownTime","range","spread","radius","speed","damageProfile"],"fiskheroes:fire_resistance":["duration"],"fiskheroes:fire_weakness":["soundEvents","radius","duration"],"fiskheroes:size_manipulation":["soundEvents","minSize","maxSize","isInstant"],"fiskheroes:invisibility":["soundEvents","isToggle"],"fiskheroes:metal_skin":[],"fiskheroes:energy_manipulation":["soundEvents","range","isToggle","chargeTime","damageProfile"],"fiskheroes:speed_disintegration":["factor"],"fiskheroes:leaping":["soundEvents","leapAmount"],"fiskheroes:earthquake":["cooldownTime","radius","knockback","duration","damageProfile"],"fiskheroes:shape_shifting":[],"fiskheroes:projectile_immunity":["soundEvents"],"fiskheroes:archery":["soundEvents"],"fiskheroes:spellcasting":["soundEvents","spells"],"fiskheroes:frost_walking":["radius"],"fiskheroes:damage_resistance":["soundEvents","damageType","factor"],"fiskheroes:potion_immunity":["potionEffects"],"fiskheroes:propelled_flight":["soundEvents"],"fiskheroes:energy_blast":["soundEvents","cooldownTime","range","damageProfile"],"fiskheroes:tentacles":["soundEvents","climbing","range","canBreakGlass","tentacles","tentacleStrike","damageProfile"],"fiskheroes:fireball":["soundEvents","cooldownTime","radius","damageProfile"],"fiskheroes:eternium_weakness":["soundEvents","radius","duration"],"fiskheroes:cactus_recruitment":["soundEvents","cooldownTime","range"],"fiskheroes:sonic_waves":["soundEvents","isToggle","knockback","damageProfile"],"fiskheroes:hover":["soundEvents","isToggle"],"fiskheroes:web_zip":["soundEvents","cooldownTime","range"],"fiskheroes:ground_smash":["cooldownTime","radius","knockback","damageProfile"],"fiskheroes:shadowform":["soundEvents","isToggle"],"fiskheroes:blade":["soundEvents","isToggle"],"fiskheroes:shield":["soundEvents","shield","isToggle","knockback","coverage"],"fiskheroes:damage_bonus":["damageBonus","amount"],"fiskheroes:shield_throwing":["soundEvents","cooldownTime"],"fiskheroes:slow_motion":["soundEvents","isToggle"],"fiskheroes:intangibility":["soundEvents","isToggle","isAbsolute"],"fiskheroes:energy_bolt":["soundEvents","cooldownTime","isExplosive","damageProfile"],"fiskheroes:controlled_flight":["soundEvents","boostSpeed","canBoost","collision","knockback","canRoll","speed"],"fiskheroes:sentry_mode":[],"fiskheroes:flight":["soundEvents","speed"],"fiskheroes:arrow_catching":["soundEvents"],"fiskheroes:gliding":["soundEvents","boostSpeed","isPowered","collision","knockback","isControlled","gliding","canJumpActivate"],"fiskheroes:shadowdome":["soundEvents","radius","chargeTime","duration"],"fiskheroes:charged_beam":["soundEvents","cooldownTime","range","isToggle","radius","chargeTime","duration","damageProfile"],"fiskheroes:damage_weakness":["soundEvents","damageType","factor"],"fiskheroes:teleportation":["soundEvents","range","canReachMoon"],"fiskheroes:healing_factor":["soundEvents","delay"],"fiskheroes:cryo_charge":["soundEvents","isToggle"],"fiskheroes:wall_crawling":["soundEvents"],"fiskheroes:telekinesis":["soundEvents","telekinesis","range","canGrab"],"fiskheroes:super_speed":["soundEvents","canUseTreadmill"],"fiskheroes:flame_blast":["range","damageProfile"],"fiskheroes:lightning_cast":["soundEvents","cooldownTime","chainRadius","range","damageProfile"],"fiskheroes:energy_projection":["soundEvents","range","isToggle","radius","damageProfile"],"fiskheroes:web_swinging":["soundEvents","cooldownTime","isToggle"],"fiskheroes:cooldown":["soundEvents","cooldown"],"fiskheroes:heat_vision":["soundEvents","range","isToggle","radius","damageProfile"],"fiskheroes:regeneration":["factor"],"fiskheroes:transformation":["soundEvents","transformation","isToggle","key"],"fiskheroes:spike_burst":["soundEvents","cooldownTime","damageProfile"],"fiskheroes:water_breathing":[],"fiskheroes:gravity_manipulation":["soundEvents","affectsUser","minGravity","range","isToggle","radius","maxGravity"],"fiskheroes:damage_immunity":["soundEvents","damageType"],"fiskheroes:equipment":["soundEvents","equipment"],"fiskheroes:potion_retention":["potionEffects"]}},"headers":{"Particle Types":["Key","Supports RGB"],"Status Effects":["Key","Numerical Id"],"Fabricator Criteria":["Key","  Var | Type"],"Damage Properties":["Key","Type"],"Data Variables":["Key","Type"],"Power Properties":["Key","Type"],"Potion Effects":["Key","Numerical Id"],"Rules":["Key","Type"],"Modifiers":["Key","Properties"]}}